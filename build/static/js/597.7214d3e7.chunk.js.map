{"version":3,"file":"static/js/597.7214d3e7.chunk.js","mappings":"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","sources":["components/ActionDialog/index.js","components/Barcode/index.js","components/CustomDialog/ErrorDialog/index.js","components/CustomDialog/index.js","components/CustomInput/index.js","components/ProfileBar/index.js","components/TopNav/Back/index.js","components/TopNav/WithBackground/index.js","components/TopNav/WithProfile/index.js","components/TopNav/index.js","pages/RegisterVaksin/validation.js","pages/RegisterVaksin/index.js"],"sourcesContent":["import Close from \"@mui/icons-material/Close\";\r\nimport { Typography } from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  container: {\r\n    padding: \"16px\",\r\n  },\r\n}));\r\nconst FilterDialog = (props) => {\r\n  const classes = useStyles();\r\n  const { children, setOpen, open, onSubmit, label, buttonText, noClose } = props;\r\n  const handleClose = () => {\r\n    if(!noClose){\r\n      setOpen(false);\r\n    }\r\n  }\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} fullWidth>\r\n      <Paper className={classes.container}>\r\n        <Grid container spacing={2}>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            container\r\n            justifyContent={\"space-between\"}\r\n            alignItems={\"center\"}\r\n          >\r\n            <Grid item xs>\r\n              <Typography variant=\"subtitle2\">{label}</Typography>\r\n            </Grid>\r\n            {!noClose && (\r\n              <Grid item xs container justifyContent={\"end\"}>\r\n                <IconButton onClick={handleClose}>\r\n                  <Close />\r\n                </IconButton>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {children}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {onSubmit && (\r\n              <Button variant=\"contained\" fullWidth onClick={onSubmit}>\r\n                {buttonText}\r\n              </Button>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default FilterDialog;\r\n","import React, { useRef } from \"react\";\r\nimport jsbarcode from \"jsbarcode\";\r\nimport styled from \"styled-components\";\r\nimport { Button, Stack, Typography } from \"@mui/material\";\r\nconst CustomCanvas = styled.canvas`\r\n    width: auto;\r\n    height: 150px;\r\n`\r\nconst Barcode = (props) => {\r\n  const { barcode, action } = props;\r\n  let ref = useRef(null);\r\n  const [disabled, setDisabled] = React.useState(true);\r\n  React.useEffect(() => {\r\n    jsbarcode(ref.current, barcode);\r\n      setTimeout(() => {\r\n        setDisabled(false);\r\n      }, 2000);\r\n\r\n  }, [barcode]);\r\n  const save = () => {\r\n    var gh = ref.current.toDataURL(\"image/png\");\r\n    var a = document.createElement(\"a\");\r\n    a.href = gh;\r\n    a.download = \"image.png\";\r\n    a.click();\r\n    action && action();\r\n  };\r\n  return (\r\n    <Stack spacing={2}>\r\n      <Typography variant=\"body1\" align=\"center\">\r\n        Mohon simpan barcode kedalam galeri anda, barcode akan digunakan saat daftar\r\n        ulang di RS\r\n      </Typography>\r\n      <CustomCanvas id=\"barcode\" ref={ref} />\r\n      <Button variant=\"contained\" onClick={save} disabled={disabled}>\r\n        Simpan dan Tutup\r\n      </Button>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Barcode;\r\n","import Close from \"@mui/icons-material/Close\";\r\nimport { Button, Container, Dialog, Grid, IconButton, Typography } from \"@mui/material\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport React from \"react\";\r\nimport failImg from \"../../../assets/hand_fail.png\";\r\nimport succImg from \"../../../assets/hand_succ.png\";\r\nconst useStyles = makeStyles(() => ({\r\n  img: {\r\n    width: \"auto\",\r\n    maxHeight: \"150px\",\r\n  },\r\n  container:{\r\n      padding: \"16px 0px\"\r\n  }\r\n}));\r\nconst ErrorDialog = (props) => {\r\n  const { title, setOpen, open, type } = props;\r\n  const classes = useStyles();\r\n  const handleClose = () => {\r\n    return setOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <Container className={classes.container}>\r\n          <Grid container spacing={2} justifyContent={\"center\"}>\r\n            <Grid item container justifyContent={\"end\"} xs={12}>\r\n              <IconButton onClick={handleClose}>\r\n                <Close />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={12} container justifyContent={\"center\"}>\r\n              <img\r\n                src={type === \"error\" ? failImg : succImg}\r\n                className={classes.img}\r\n                alt=\"failed\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography align=\"center\" variant=\"body1\">\r\n                {title}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"contained\" onClick={handleClose} fullWidth>\r\n                Close\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorDialog;\r\n","import React from \"react\";\r\nimport ErrorDialog from \"./ErrorDialog\";\r\n\r\nfunction CustomDialog(props) {\r\n  const { type } = props;\r\n  let html = \"\";\r\n  switch (type) {\r\n    case \"error\":\r\n     html= <ErrorDialog {...props} />;\r\n      break;\r\n    default:\r\n      html = <ErrorDialog {...props} />;\r\n      break;\r\n  }\r\n  return <>{html}</>;\r\n}\r\n\r\nexport default CustomDialog;\r\n","import { TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PhoneNumberCustom = React.forwardRef(function PhoneNumberCustom(\r\n  props,\r\n  ref\r\n) {\r\n  const { onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={ref}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      format={\"####-####-####\"}\r\n      allowLeadingZeros\r\n      allowNegative={false}\r\n      decimalScale={0}\r\n      //   maxLength={13}\r\n      //   minLength={10}\r\n    />\r\n  );\r\n});\r\nconst PhoneNumberInput = (params) => {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const { classes, props } = params;\r\n\r\n  //   const helperText = (\r\n  //     <span className={classes.helperText}>{props.helperText}</span>\r\n  //   );\r\n  //   const errorText = (\r\n  //     <span className={classes.helperText}>{props.errorText}</span>\r\n  //   );\r\n  return (\r\n    <TextField\r\n      fullWidth={props.fullWidth}\r\n      label={props.label}\r\n      value={props.value}\r\n      onChange={props.onChange}\r\n      name={props.name}\r\n      id={props.id}\r\n      InputProps={{\r\n        inputComponent: PhoneNumberCustom,\r\n      }}\r\n      error={props.error}\r\n      helperText={props.helperText}\r\n      variant={props.variant || \"outlined\"}\r\n    />\r\n  );\r\n};\r\n\r\nconst NumberFormatMR = React.forwardRef(function NumberFormatCustom(\r\n  props,\r\n  ref\r\n) {\r\n  const { onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={ref}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.formattedValue,\r\n          },\r\n        });\r\n      }}\r\n      format={\"##-##-##\"}\r\n      allowLeadingZeros\r\n      allowNegative={false}\r\n      decimalScale={0}\r\n      //   maxLength={13}\r\n      //   minLength={10}\r\n    />\r\n  );\r\n});\r\nconst NoMrInput = (params) => {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const { classes, props } = params;\r\n\r\n  //   const helperText = (\r\n  //     <span className={classes.helperText}>{props.helperText}</span>\r\n  //   );\r\n  //   const errorText = (\r\n  //     <span className={classes.helperText}>{props.errorText}</span>\r\n  //   );\r\n  return (\r\n    <TextField\r\n      fullWidth={props.fullWidth}\r\n      size={props.size}\r\n      label={props.label}\r\n      value={props.value}\r\n      onChange={props.onChange}\r\n      name={props.name}\r\n      id={props.id}\r\n      InputProps={{\r\n        inputComponent: NumberFormatMR,\r\n      }}\r\n      error={props.error}\r\n      helperText={props.helperText}\r\n      variant={props.variant || \"outlined\"}\r\n    />\r\n  );\r\n};\r\nconst DefaultInput = (params) => {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const { classes, props } = params;\r\n  return (\r\n    <TextField\r\n      size={props.size}\r\n      fullWidth={props.fullWidth}\r\n      label={props.label}\r\n      value={props.value}\r\n      onChange={props.onChange}\r\n      name={props.name}\r\n      id={props.id}\r\n      error={props.error}\r\n      helperText={props.helperText}\r\n      variant={props.variant || \"outlined\"}\r\n    />\r\n  );\r\n};\r\nconst useStyles = makeStyles(() => ({}));\r\n\r\nconst CustomInput = (props) => {\r\n  let input = null;\r\n  const classes = useStyles();\r\n  switch (props.inputType) {\r\n    case \"phone-number\":\r\n      input = PhoneNumberInput({ props, classes });\r\n      break;\r\n    case \"no_mr\":\r\n      input = NoMrInput({ props, classes });\r\n      break;\r\n    default:\r\n      input = DefaultInput({ props, classes });\r\n      break;\r\n  }\r\n\r\n  return <> {input} </>;\r\n};\r\n\r\nCustomInput.propTypes = {\r\n  inputType: PropTypes.string.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n  name: PropTypes.any.isRequired,\r\n  id: PropTypes.any.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CustomInput;\r\n","import Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport React from \"react\";\r\nimport doctorImg from \"../../assets/dokter.png\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/actions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    padding: \"3px\",\r\n    borderRadius: \"50% !important\",\r\n    cursor: \"pointer\",\r\n  },\r\n  img: {\r\n    width: \"40px\",\r\n    height: \"40px\",\r\n    borderRadius: \"50%\",\r\n    objectFit: \"contain\",\r\n  },\r\n}));\r\nconst ProfileBar = (props) => {\r\n  const { stateUser } = props;\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const handleProfile = () => {\r\n    stateUser ? navigate(\"/profile\") : navigate(\"/login\");\r\n  };\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <Grid item xs={12} container justifyContent=\"end\">\r\n          <Paper className={classes.root}>\r\n            <img\r\n              src={doctorImg}\r\n              alt=\"profile\"\r\n              className={classes.img}\r\n              onClick={handleProfile}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n    // <Paper className={classes.root}>\r\n    //   <Grid\r\n    //     container\r\n    //     spacing={2}\r\n    //     className={classes.root}\r\n    //     alignItems=\"center\"\r\n    //     justifyContent=\"space-around\"\r\n    //   >\r\n    //     <Grid item>\r\n    //       <img src={doctorImg} alt=\"profile\" className={classes.img} />\r\n    //     </Grid>\r\n    //     <Grid item>\r\n    //       <Typography variant=\"subtitle2\">\r\n    //         Hi, {stateUser ? stateUser.nama : \"Pengunjung\"}\r\n    //       </Typography>\r\n    //       {/* <Typography variant=\"subtitle2\">Login</Typography> */}\r\n    //     </Grid>\r\n    //     <Grid item>\r\n    //       {stateUser && (\r\n    //         <IconButton onClick={() => actLogout(null)}>\r\n    //           <Logout />\r\n    //         </IconButton>\r\n    //       )}\r\n    //       {!stateUser && (\r\n    //         <IconButton onClick={toLogin}>\r\n    //           <Login />\r\n    //         </IconButton>\r\n    //       )}\r\n    //     </Grid>\r\n    //   </Grid>\r\n    // </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stateUser: state.auth.user,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actLogout: (actions) => dispatch(logout(actions)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileBar);\r\n","import React from 'react'\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ChevronLeftOutlined from \"@mui/icons-material/ChevronLeftOutlined\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport {  NTRL_700, PRI_500 } from '../../../theme/colors';\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    // padding: \"32px 0\",\r\n    // bottom: 0,\r\n    // left: 0,\r\n    // right: 0,\r\n  },\r\n  iconButton: {\r\n    borderRadius: \"50%\",\r\n    border: \"2px solid !important\",\r\n    marginRight: \"8px !important\",\r\n  },\r\n  icon: {\r\n    color: PRI_500,\r\n  },\r\n  text: {\r\n    color: NTRL_700,\r\n  },\r\n}));\r\nconst Back = (props) => {\r\n    const classes = useStyles();\r\n    const {title = \"Undefined\", click = () => {}} = props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <IconButton className={classes.iconButton} onClick={click}>\r\n          <ChevronLeftOutlined className={classes.icon} />\r\n        </IconButton>\r\n        <Typography variant=\"subtitle2\" className={classes.text}>\r\n            {title}\r\n        </Typography>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Back\r\n","import React from \"react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ChevronLeftOutlined from \"@mui/icons-material/ChevronLeftOutlined\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport { NTRL_100, PRI_400, PRI_500 } from \"../../../theme/colors\";\r\nimport { Grid, Stack } from \"@mui/material\";\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: \"200px\",\r\n    backgroundColor: PRI_400,\r\n    // padding: \"32px 0\",\r\n    // bottom: 0,\r\n    // left: 0,\r\n    // right: 0,\r\n  },\r\n  container: {\r\n    padding: \"32px\"\r\n  },\r\n  iconButton: {\r\n    borderRadius: \"50%\",\r\n    border: \"2px solid !important\",\r\n    marginRight: \"8px !important\",\r\n  },\r\n  icon: {\r\n    color: PRI_500,\r\n  },\r\n  text: {\r\n    color: NTRL_100,\r\n  },\r\n}));\r\nconst Back = (props) => {\r\n  const classes = useStyles();\r\n  const { title = \"Undefined\", subtitle, click = () => {} } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={2} className={classes.container}>\r\n        <Grid item xs={12}>\r\n          <IconButton className={classes.iconButton} onClick={click}>\r\n            <ChevronLeftOutlined className={classes.icon} />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Stack spacing={1}>\r\n            <Typography variant=\"subtitle2\" className={classes.text}>\r\n              {title}\r\n            </Typography>\r\n            <Typography variant=\"body1\" className={classes.text}>\r\n              {subtitle}\r\n            </Typography>\r\n          </Stack>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Back;\r\n","import React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ChevronLeftOutlined from \"@mui/icons-material/ChevronLeftOutlined\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport { NTRL_700, PRI_500 } from \"../../../theme/colors\";\r\nimport ProfileBar from \"../../ProfileBar\";\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    // padding: \"32px 0\",\r\n    // bottom: 0,\r\n    // left: 0,\r\n    // right: 0,\r\n  },\r\n  iconButton: {\r\n    borderRadius: \"50%\",\r\n    border: \"2px solid !important\",\r\n    marginRight: \"8px !important\",\r\n  },\r\n  icon: {\r\n    color: PRI_500,\r\n  },\r\n  text: {\r\n    color: NTRL_700,\r\n  },\r\n}));\r\nconst WithProfile = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { title = \"Undefined\", click = () => {} } = props;\r\n  return (\r\n    <>\r\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n        <div className={classes.root}>\r\n          <IconButton className={classes.iconButton} onClick={click}>\r\n            <ChevronLeftOutlined className={classes.icon} />\r\n          </IconButton>\r\n          <Typography variant=\"subtitle2\" className={classes.text}>\r\n            {title}\r\n          </Typography>\r\n        </div>\r\n        <ProfileBar />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WithProfile;\r\n","import React from \"react\";\r\nimport Back from \"./Back\";\r\nimport WithBackground from \"./WithBackground\";\r\nimport WithProfile from \"./WithProfile\";\r\nconst TopNav = (props) => {\r\n  let html = \"\";\r\n  let { variant } = props;\r\n  switch (variant) {\r\n    case \"with-background\":\r\n      html = <WithBackground {...props} />;\r\n      break;\r\n    case \"with-profile\":\r\n      html = <WithProfile {...props} />;\r\n      break;\r\n    default:\r\n      html = <Back {...props} />;\r\n      break;\r\n  }\r\n  return <>{html}</>;\r\n};\r\n\r\nexport default TopNav;\r\n","import Joi from \"joi\";\r\n\r\nconst keys = {\r\n  produkId: Joi.string().empty().messages({\r\n    \"string.empty\": \"Pilih jenis vaksinasi.\",\r\n  }),\r\n  jenisId: Joi.string().empty().messages({\r\n    \"string.empty\": \"Isi Jenis identitas anda.\",\r\n  }),\r\n  jenisIdnomor: Joi.string().empty().min(6).messages({\r\n    \"string.empty\": \"Isi nomor identitas anda.\",\r\n    \"string.min\": \"Identitas min 6 karakter.\",\r\n  }),\r\n  namaLengkap: Joi.string().empty().min(3).messages({\r\n    \"string.empty\": \"Isi nama lengkap anda.\",\r\n    \"string.min\": \"Nama lengkap min 3 karakter.\",\r\n  }),\r\n  tempatLahir: Joi.string().empty().min(3).messages({\r\n    \"string.empty\": \"Isi tempat kelahiran anda.\",\r\n    \"string.min\": \"tempat kelahiran min 3 karakter.\",\r\n  }),\r\n  tglLahir: Joi.string().empty().messages({\r\n    \"string.empty\": \"Isi tanggal kelahiran anda.\",\r\n  }),\r\n  jenisKelamin: Joi.string().empty().messages({\r\n    \"string.empty\": \"Isi jenis kelamin anda.\",\r\n  }),\r\n  propinsi: Joi.string().empty().min(3).messages({\r\n    \"string.empty\": \"Isi propinsi anda.\",\r\n    \"string.min\": \"propinsi min 3 karakter.\",\r\n  }),\r\n  kotaDati: Joi.string().empty().min(3).messages({\r\n    \"string.empty\": \"Isi kotamadya anda.\",\r\n    \"string.min\": \"kotamadya min 3 karakter.\",\r\n  }),\r\n  kecamatan: Joi.string().empty().min(3).messages({\r\n    \"string.empty\": \"Isi alamat anda.\",\r\n    \"string.min\": \"alamat min 3 karakter.\",\r\n  }),\r\n  kelurahan: Joi.string().empty().min(3).messages({\r\n    \"string.empty\": \"Isi alamat anda.\",\r\n    \"string.min\": \"alamat min 3 karakter.\",\r\n  }),\r\n  alamat: Joi.string().empty().min(3).messages({\r\n    \"string.empty\": \"Isi kotamadya anda.\",\r\n    \"string.min\": \"alamat min 3 karakter.\",\r\n  }),\r\n  rt: Joi.string().empty().messages({\r\n    \"string.empty\": \"Isi rt anda.\",\r\n  }),\r\n  rw: Joi.string().empty().messages({\r\n    \"string.empty\": \"Isi rw anda.\",\r\n  }),\r\n  alamatDomisili: Joi.string().empty().min(3).messages({\r\n    \"string.empty\": \"Isi alamat anda.\",\r\n    \"string.min\": \"alamat min 3 karakter.\",\r\n  }),\r\n  kodePos: Joi.string().empty().min(3).messages({\r\n    \"string.empty\": \"Isi kodepos anda.\",\r\n    \"string.min\": \"kodepos min 3 karakter.\",\r\n  }),\r\n  noTelpon: Joi.string().empty().min(10).messages({\r\n    \"string.empty\": \"Isi noTelpon anda.\",\r\n    \"string.min\": \"noTelpon min 10 karakter.\",\r\n  }),\r\n  agama: Joi.any().empty().messages({\r\n    \"any.empty\": \"Isi agama anda.\",\r\n  }),\r\n  tglKunjungan: Joi.any().empty().messages({\r\n    \"any.empty\": \"Isi tanggal kunjugan anda.\",\r\n  }),\r\n  statusNikah: Joi.any().allow(null, \"\"),\r\n};\r\n\r\nexport function isFormValid(data) {\r\n  const schema = Joi.object(keys);\r\n\r\n  //Object.assign(data, { spouseIdNo: data.marriageStatus === 'MENIKAH' ? data.spouseIdNo : '' });\r\n  //Object.assign(data, { partnerName: data.marriageStatus === 'MENIKAH' ? data.partnerName : '' });\r\n\r\n  return schema.validate(data);\r\n}\r\n\r\nexport function isSelectedFieldValid(field, value) {\r\n  if (keys[field]) {\r\n    const schema = Joi.object({ field: keys[field] });\r\n\r\n    return schema.validate({\r\n      field: value,\r\n    });\r\n  }\r\n  return true;\r\n}\r\n","import React from \"react\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport moment from \"moment\";\r\nimport ActionDialog from \"../../components/ActionDialog\";\r\nimport Barcode from \"../../components/Barcode\";\r\nimport CustomDialog from \"../../components/CustomDialog\";\r\nimport CustomInput from \"../../components/CustomInput\";\r\nimport TopNav from \"../../components/TopNav\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getAgama,\r\n  getJenisIdentitas,\r\n  getStatusNikah,\r\n  getDataProduk,\r\n  setFormVaksin,\r\n  resetVaksin,\r\n  setIdentitas,\r\n  getIdentitas,\r\n  registerVaksin,\r\n  resetIdentitas,\r\n  getPropinsi,\r\n  getKotamadya,\r\n  getKecamatan,\r\n  getKelurahan,\r\n} from \"../../redux/actions\";\r\nimport { isFormValid, isSelectedFieldValid } from \"./validation\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    padding: \"16px 0\",\r\n  },\r\n  langContainer: {\r\n    padding: \"16px 0\",\r\n    overflowX: \"hidden\",\r\n  },\r\n  dialogImg: {\r\n    height: \"250px\",\r\n    width: \"auto\",\r\n  },\r\n}));\r\nconst RegisterVaksin = (props) => {\r\n  const {\r\n    stateBahasa,\r\n    actGetAgama,\r\n    actGetJenisID,\r\n    actGetStatusNikah,\r\n    stateAgama,\r\n    stateStatusNikah,\r\n    stateJenisID,\r\n    stateError,\r\n    actRegisterVaksin,\r\n    actGetProduk,\r\n    stateProduk,\r\n    statePropinsi,\r\n    stateKotamadya,\r\n    stateKecamatan,\r\n    stateKelurahan,\r\n    actSetFormVaksin,\r\n    stateRegVaksin,\r\n    actResetVaksin,\r\n    actSetIdentitas,\r\n    stateIdentitas,\r\n    actGetIdentitas,\r\n    actResetIdentitas,\r\n    actGetPropinsi,\r\n    actGetKotamadya,\r\n    actGetKecamatan,\r\n    actGetKelurahan,\r\n  } = props;\r\n  const {\r\n    jenisId,\r\n    jenisIdnomor,\r\n    namaLengkap,\r\n    tempatLahir,\r\n    tglLahir,\r\n    jenisKelamin,\r\n    alamat,\r\n    rt,\r\n    rw,\r\n    kelurahan,\r\n    kecamatan,\r\n    kotaDati,\r\n    kodePos,\r\n    propinsi,\r\n    noTelpon,\r\n    agama,\r\n    statusNikah,\r\n    alamatDomisili,\r\n  } = stateIdentitas;\r\n\r\n  const { produkId, tglKunjungan } = stateRegVaksin;\r\n\r\n  const invalidInitial = {\r\n    jenisId: \"\",\r\n    produkId: \"\",\r\n    jenisIdnomor: \"\",\r\n    namaLengkap: \"\",\r\n    tempatLahir: \"\",\r\n    tglLahir: \"\",\r\n    jenisKelamin: \"\",\r\n    alamat: \"\",\r\n    rt: \"\",\r\n    rw: \"\",\r\n    kelurahan: \"\",\r\n    kecamatan: \"\",\r\n    kotaDati: \"\",\r\n    kodePos: \"\",\r\n    propinsi: \"\",\r\n    noTelpon: \"\",\r\n    agama: \"\",\r\n    statusNikah: \"\",\r\n    alamatDomisili: \"\",\r\n    tglKunjungan: \"\",\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const [sameAddress, setHandleSameAddress] = React.useState(false);\r\n  const [errorForm, setErrorForm] = React.useState(\"\");\r\n  const [succForm, setSuccForm] = React.useState(false);\r\n\r\n  //   const [form, setForm] = React.useState(formInitial);\r\n  const [formInvalid, setInvalid] = React.useState(invalidInitial);\r\n\r\n  const navigate = useNavigate();\r\n  React.useEffect(() => {\r\n    if (stateError) {\r\n      navigate(\"/exception-handling\");\r\n    }\r\n  }, [stateError, navigate]);\r\n\r\n  React.useEffect(() => {\r\n    actGetAgama();\r\n    actGetJenisID();\r\n    actGetStatusNikah();\r\n    actGetProduk();\r\n    actGetPropinsi();\r\n  }, [\r\n    actGetAgama,\r\n    actGetJenisID,\r\n    actGetProduk,\r\n    actGetPropinsi,\r\n    actGetStatusNikah,\r\n  ]);\r\n\r\n  const changeForm = (elem, type) => {\r\n    let { name, id, value } = elem.target;\r\n    let { error } = isSelectedFieldValid(name ? name : id, value);\r\n    setInvalid({\r\n      ...formInvalid,\r\n      [name ? name : id]: error ? \"*\" + error.message : \"\",\r\n    });\r\n    if (type === \"identitas\") {\r\n      actSetIdentitas({\r\n        key: name ? name : id,\r\n        value: value,\r\n      });\r\n    } else {\r\n      actSetFormVaksin({\r\n        key: name ? name : id,\r\n        value: value,\r\n      });\r\n    }\r\n    // return setForm({\r\n    //   ...form,\r\n    //   [name ? name : id]: value,\r\n    // });\r\n    // return;\r\n  };\r\n\r\n  const changeFormAuto = (elem) => {\r\n    let { name, id, value } = elem;\r\n    let { error } = isSelectedFieldValid(name, value);\r\n    switch (name) {\r\n      case \"propinsi\":\r\n        actGetKotamadya(id);\r\n        break;\r\n      case \"kotaDati\":\r\n        actGetKecamatan(id);\r\n        break;\r\n      case \"kecamatan\":\r\n        actGetKelurahan(id);\r\n        break;\r\n      case \"kelurahan\":\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setInvalid({\r\n      ...formInvalid,\r\n      [name]: error ? \"*\" + error.message : \"\",\r\n    });\r\n    actSetIdentitas({\r\n      key: name,\r\n      value: value,\r\n    });\r\n  };\r\n  const handleGetNIK = () => {\r\n    if (jenisId === \"1\" && jenisIdnomor.length === 16) {\r\n      actGetIdentitas(jenisIdnomor);\r\n    }\r\n  };\r\n  const [submitted, setSubmitted] = React.useState(false);\r\n  const handleSubmit = () => {\r\n    let body = {\r\n      ...stateRegVaksin,\r\n      jenisId,\r\n      jenisIdnomor,\r\n      namaLengkap,\r\n      tempatLahir,\r\n      tglLahir,\r\n      jenisKelamin,\r\n      alamatDomisili,\r\n      alamat,\r\n      rt,\r\n      rw,\r\n      kelurahan,\r\n      kecamatan,\r\n      kotaDati,\r\n      kodePos,\r\n      noTelpon,\r\n      agama,\r\n      statusNikah,\r\n      propinsi,\r\n    };\r\n    let isValid = isFormValid(body);\r\n    setSubmitted(true);\r\n    if (!isValid.error) {\r\n      return actRegisterVaksin(body, {\r\n        success: () => {\r\n          actResetVaksin();\r\n          setSuccForm(true);\r\n          setSubmitted(false);\r\n        },\r\n        failed: (msg) => {\r\n          setErrorForm(msg);\r\n          setSubmitted(false);\r\n        },\r\n      });\r\n    } else {\r\n      if (\r\n        isValid.error.details[0].context &&\r\n        isValid.error.details[0].context.key\r\n      ) {\r\n        let key = isValid.error.details[0].context.key;\r\n        setInvalid({\r\n          ...formInvalid,\r\n          [key]: isValid.error.details[0].message,\r\n        });\r\n      }\r\n      setErrorForm(isValid.error.details[0].message || \"Mohon Lengkapi Form!.\");\r\n      setSubmitted(false);\r\n    }\r\n  };\r\n\r\n  const handleSameAddress = () => {\r\n    setHandleSameAddress(!sameAddress);\r\n    // setForm({ ...form, alamat: alamatDomisili });\r\n    actSetIdentitas({\r\n      key: \"alamatDomisili\",\r\n      value: alamat,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {/* <CustomDialog\r\n        setOpen={setSuccForm}\r\n        type={\"success\"}\r\n        title={\"Berhasil Terdaftar!.\"}\r\n        open={succForm}\r\n      /> */}\r\n      <ActionDialog open={succForm} buttonText={\"Close\"} noClose={true}>\r\n        <Typography variant=\"subtitle2\" align=\"center\">\r\n          Berhasil Mendaftar!.\r\n        </Typography>\r\n        <Barcode\r\n          barcode={jenisIdnomor}\r\n          action={() => {\r\n            actResetIdentitas();\r\n            setSuccForm(false);\r\n          }}\r\n        />\r\n      </ActionDialog>\r\n      <CustomDialog\r\n        setOpen={setErrorForm}\r\n        type={\"error\"}\r\n        title={errorForm}\r\n        open={errorForm ? true : false}\r\n      />\r\n      <Container className={classes.root}>\r\n        <Stack spacing={2}>\r\n          <TopNav\r\n            type=\"back\"\r\n            title={\r\n              stateBahasa === \"indonesia\"\r\n                ? \"Daftar Vaksin\"\r\n                : \"Register Vaccination\"\r\n            }\r\n            click={() => navigate(-1)}\r\n          />\r\n          <FormControl\r\n            fullWidth\r\n            required\r\n            error={formInvalid.produkId ? true : false}\r\n          >\r\n            <InputLabel id=\"produkId\">\r\n              {stateBahasa === \"indonesia\" ? \"Jenis Vaksin\" : \"Vaccine Type\"}\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"produkId\"\r\n              id=\"produkId\"\r\n              name=\"produkId\"\r\n              value={produkId}\r\n              onChange={(el) => changeForm(el, \"vaksin\")}\r\n            >\r\n              {stateProduk &&\r\n                stateProduk.map((item, index) => {\r\n                  return (\r\n                    <MenuItem\r\n                      key={\"vaksin\" + index}\r\n                      value={item.ref_prod_id.toString()}\r\n                    >\r\n                      {item.ref_prod_nama}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl\r\n            fullWidth\r\n            required\r\n            error={formInvalid.jenisId ? true : false}\r\n          >\r\n            <InputLabel id=\"jenisId\">\r\n              {stateBahasa === \"indonesia\"\r\n                ? \"Jenis Identitas\"\r\n                : \"Identity Type\"}\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"jenisId\"\r\n              id=\"jenisId\"\r\n              name=\"jenisId\"\r\n              value={jenisId}\r\n              onChange={(el) => changeForm(el, \"identitas\")}\r\n            >\r\n              {stateJenisID &&\r\n                stateJenisID.map((item) => {\r\n                  return (\r\n                    <MenuItem\r\n                      key={\"jenisID\" + item.ref_jki_id}\r\n                      value={item.ref_jki_id.toString()}\r\n                    >\r\n                      {item.ref_jki_ket}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            id=\"jenisIdnomor\"\r\n            name=\"jenisIdnomor\"\r\n            label={\r\n              stateBahasa === \"indonesia\" ? \"No Identitas\" : \"Identity Number\"\r\n            }\r\n            required\r\n            error={formInvalid.jenisIdnomor ? true : false}\r\n            value={jenisIdnomor}\r\n            onChange={(el) => changeForm(el, \"identitas\")}\r\n            onBlur={handleGetNIK}\r\n            helperText={formInvalid.jenisIdnomor}\r\n          />\r\n          <TextField\r\n            id=\"namaLengkap\"\r\n            name=\"namaLengkap\"\r\n            label={stateBahasa === \"indonesia\" ? \"Nama Lengkap\" : \"Fullname\"}\r\n            required\r\n            value={namaLengkap}\r\n            error={formInvalid.namaLengkap ? true : false}\r\n            onChange={(el) => changeForm(el, \"identitas\")}\r\n            helperText={formInvalid.namaLengkap}\r\n          />\r\n          <TextField\r\n            id=\"tempatLahir\"\r\n            name=\"tempatLahir\"\r\n            label={stateBahasa === \"indonesia\" ? \"Tempat Lahir\" : \"Birthplace\"}\r\n            // label=\"Tempat Lahir - Birthplace\"\r\n            required\r\n            value={tempatLahir}\r\n            onChange={(el) => changeForm(el, \"identitas\")}\r\n            error={formInvalid.tempatLahir ? true : false}\r\n            helperText={formInvalid.tempatLahir}\r\n          />\r\n          <TextField\r\n            id=\"tglLahir\"\r\n            name=\"tglLahir\"\r\n            label={stateBahasa === \"indonesia\" ? \"Tanggal Lahir\" : \"Birthdate\"}\r\n            // label=\"Tanggal Lahir - Birthdate\"\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            inputProps={{\r\n              max: moment().format(\"YYYY-MM-DD\"),\r\n            }}\r\n            type={\"date\"}\r\n            value={tglLahir}\r\n            onChange={(el) => changeForm(el, \"identitas\")}\r\n            error={formInvalid.tglLahir ? true : false}\r\n            helperText={formInvalid.tglLahir}\r\n          />\r\n          <FormControl required error={formInvalid.jenisKelamin ? true : false}>\r\n            <FormLabel id=\"jenisKelamin\">\r\n              {stateBahasa === \"indonesia\" ? \"Jenis Kelamin\" : \"Gender\"}\r\n            </FormLabel>\r\n            {/* <FormLabel id=\"jenisIdentitas\">Jenis Kelamin - Gender</FormLabel> */}\r\n            <RadioGroup\r\n              row\r\n              aria-labelledby=\"jeniKelamin\"\r\n              id=\"jenisKelamin\"\r\n              name=\"jenisKelamin\"\r\n              value={jenisKelamin}\r\n              onChange={(el) => changeForm(el, \"identitas\")}\r\n            >\r\n              <FormControlLabel\r\n                value=\"1\"\r\n                control={<Radio />}\r\n                label={stateBahasa === \"indonesia\" ? \"Pria\" : \"Male\"}\r\n                // label=\"Pria - Male\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"2\"\r\n                control={<Radio />}\r\n                label={stateBahasa === \"indonesia\" ? \"Perempuan\" : \"Female\"}\r\n\r\n                // label=\"Perempuan - Female\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <Autocomplete\r\n            id=\"propinsi\"\r\n            name=\"propinsi\"\r\n            freeSolo\r\n            // onChange={(el) => console.log(el.target)}\r\n            value={propinsi}\r\n            onChange={(el, val) =>\r\n              changeFormAuto({\r\n                name: \"propinsi\",\r\n                value: val.label,\r\n                id: val.id,\r\n              })\r\n            }\r\n            inputValue={propinsi}\r\n            onInputChange={(event, newInputValue) =>\r\n              changeForm(\r\n                {\r\n                  target: {\r\n                    name: \"propinsi\",\r\n                    value: newInputValue,\r\n                  },\r\n                },\r\n                \"identitas\"\r\n              )\r\n            }\r\n            options={statePropinsi.map((option) => {\r\n              return {\r\n                id: option.ref_propinsi_id,\r\n                label: option.ref_propinsi_nama,\r\n              };\r\n            })}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                fullWidth\r\n                label={stateBahasa === \"indonesia\" ? \"Provinsi\" : \"Province\"}\r\n                required\r\n                helperText={formInvalid.propinsi}\r\n                error={formInvalid.propinsi ? true : false}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"kotaDati\"\r\n            name=\"kotaDati\"\r\n            freeSolo\r\n            inputValue={kotaDati}\r\n            onInputChange={(event, newInputValue) => {\r\n              changeForm(\r\n                {\r\n                  target: {\r\n                    name: \"kotaDati\",\r\n                    value: newInputValue,\r\n                  },\r\n                },\r\n                \"identitas\"\r\n              );\r\n            }}\r\n            value={kotaDati}\r\n            onChange={(el, val) =>\r\n              changeFormAuto({\r\n                name: \"kotaDati\",\r\n                value: val.label,\r\n                id: val.id,\r\n              })\r\n            }\r\n            options={stateKotamadya.map((option) => {\r\n              return {\r\n                id: option.ref_kotadati2_id,\r\n                label: option.ref_kotadati2_nama,\r\n              };\r\n            })}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                fullWidth\r\n                label={\r\n                  stateBahasa === \"indonesia\"\r\n                    ? \"Kotamadya / Dati II\"\r\n                    : \"Regency\"\r\n                }\r\n                required\r\n                helperText={formInvalid.kotaDati}\r\n                error={formInvalid.kotaDati ? true : false}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"kecamatan\"\r\n            name=\"kecamatan\"\r\n            freeSolo\r\n            inputValue={kecamatan}\r\n            onInputChange={(event, newInputValue) => {\r\n              changeForm(\r\n                {\r\n                  target: {\r\n                    name: \"kecamatan\",\r\n                    value: newInputValue,\r\n                  },\r\n                },\r\n                \"identitas\"\r\n              );\r\n            }}\r\n            value={kecamatan}\r\n            onChange={(el, val) =>\r\n              changeFormAuto({\r\n                name: \"kecamatan\",\r\n                value: val.label,\r\n                id: val.id,\r\n              })\r\n            }\r\n            options={stateKecamatan.map((option) => {\r\n              return {\r\n                id: option.ref_kcamatan_id,\r\n                label: option.ref_kcamatan_nama,\r\n              };\r\n            })}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                fullWidth\r\n                label={stateBahasa === \"indonesia\" ? \"Kecamatan\" : \"Country\"}\r\n                required\r\n                helperText={formInvalid.kecamatan}\r\n                error={formInvalid.kecamatan ? true : false}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"kelurahan\"\r\n            name=\"kelurahan\"\r\n            freeSolo\r\n            inputValue={kelurahan}\r\n            onInputChange={(event, newInputValue) => {\r\n              changeForm(\r\n                {\r\n                  target: {\r\n                    name: \"kelurahan\",\r\n                    value: newInputValue,\r\n                  },\r\n                },\r\n                \"identitas\"\r\n              );\r\n            }}\r\n            value={kelurahan}\r\n            onChange={(el, val) =>\r\n              changeFormAuto({\r\n                name: \"kelurahan\",\r\n                value: val.label,\r\n                id: val.id,\r\n              })\r\n            }\r\n            options={stateKelurahan.map((option) => {\r\n              return {\r\n                id: option.ref_klurahan_id,\r\n                label: option.ref_klurahan_nama,\r\n              };\r\n            })}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                fullWidth\r\n                label={\r\n                  stateBahasa === \"indonesia\" ? \"Kelurahan\" : \"Subdistrict\"\r\n                }\r\n                required\r\n                helperText={formInvalid.kelurahan}\r\n                error={formInvalid.kelurahan ? true : false}\r\n              />\r\n            )}\r\n          />\r\n          {/* <TextField\r\n            fullWidth\r\n            id=\"propinsi\"\r\n            name=\"propinsi\"\r\n            // label=\"Provinsi - Province\"\r\n            label={stateBahasa === \"indonesia\" ? \"Provinsi\" : \"Province\"}\r\n            required\r\n            value={propinsi}\r\n            onChange={(el) => changeForm(el, \"identitas\")}\r\n            helperText={formInvalid.propinsi}\r\n            error={formInvalid.propinsi ? true : false}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            id=\"kecamatan\"\r\n            // label=\"Kecamatan - Country\"\r\n            label={stateBahasa === \"indonesia\" ? \"Kecamatan\" : \"Country\"}\r\n            required\r\n            value={kecamatan}\r\n            onChange={(el) => changeForm(el, \"identitas\")}\r\n            helperText={formInvalid.kecamatan}\r\n            error={formInvalid.kecamatan ? true : false}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            id=\"kotaDati\"\r\n            name=\"kotaDati\"\r\n            // label=\"Kotamadya / Dati II - Regency\"\r\n            label={stateBahasa === \"indonesia\" ? \"Kotamadya / Dati II\" : \"Regency\"}\r\n            required\r\n            value={kotaDati}\r\n            onChange={(el) => changeForm(el, \"identitas\")}\r\n            helperText={formInvalid.kotaDati}\r\n            error={formInvalid.kotaDati ? true : false}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            id=\"kelurahan\"\r\n            name=\"kelurahan\"\r\n            // label=\"Kelurahan - Subdistrict\"\r\n            label={stateBahasa === \"indonesia\" ? \"Kelurahan\" : \"Subdistrict\"}\r\n            required\r\n            value={kelurahan}\r\n            onChange={(el) => changeForm(el, \"identitas\")}\r\n            helperText={formInvalid.kelurahan}\r\n            error={formInvalid.kelurahan ? true : false}\r\n          /> */}\r\n          <TextField\r\n            fullWidth\r\n            id=\"kodePos\"\r\n            name=\"kodePos\"\r\n            // label=\"Kode Pos - Post Code\"\r\n            label={stateBahasa === \"indonesia\" ? \"Kode Pos\" : \"Post Code\"}\r\n            required\r\n            value={kodePos}\r\n            onChange={(el) => changeForm(el, \"identitas\")}\r\n            helperText={formInvalid.kodePos}\r\n            error={formInvalid.kodePos ? true : false}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            id=\"alamat\"\r\n            name=\"alamat\"\r\n            // label=\"Alamat Sesuai Identitas - Address ID\"\r\n            label={\r\n              stateBahasa === \"indonesia\"\r\n                ? \"Alamat Sesuai Identitas\"\r\n                : \"Address ID\"\r\n            }\r\n            required\r\n            value={alamat}\r\n            onChange={(el) => changeForm(el, \"identitas\")}\r\n            helperText={formInvalid.alamat}\r\n            error={formInvalid.alamat ? true : false}\r\n          />\r\n          <div>\r\n            <Stack direction=\"row\" spacing={2}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"rt\"\r\n                name=\"rt\"\r\n                label=\"RT\"\r\n                required\r\n                value={rt}\r\n                onChange={(el) => changeForm(el, \"identitas\")}\r\n                helperText={formInvalid.rw}\r\n                error={formInvalid.rt ? true : false}\r\n\r\n                // value={type}\r\n                // onChange={changeType}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                id=\"rw\"\r\n                name=\"rw\"\r\n                label=\"RW\"\r\n                required\r\n                value={rw}\r\n                onChange={(el) => changeForm(el, \"identitas\")}\r\n                helperText={formInvalid.rw}\r\n                error={formInvalid.rw ? true : false}\r\n              />\r\n            </Stack>\r\n          </div>\r\n          <Stack>\r\n            <TextField\r\n              id=\"alamatDomisili\"\r\n              name=\"alamatDomisili\"\r\n              // label=\"Alamat Domisili - Current Address\"\r\n              label={\r\n                stateBahasa === \"indonesia\"\r\n                  ? \"Alamat Domisili\"\r\n                  : \"Current Address\"\r\n              }\r\n              required\r\n              error={formInvalid.alamatDomisili ? true : false}\r\n              value={alamatDomisili}\r\n              disabled={sameAddress}\r\n              onChange={(el) => changeForm(el, \"identitas\")}\r\n              helperText={formInvalid.alamatDomisili}\r\n            />\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={sameAddress}\r\n                    onChange={handleSameAddress}\r\n                  />\r\n                }\r\n                label={\r\n                  stateBahasa === \"indonesia\"\r\n                    ? \"Sama dengan alamat KTP\"\r\n                    : \"Same as ID address\"\r\n                }\r\n              />\r\n            </FormGroup>\r\n          </Stack>\r\n          <Stack direction=\"row\" spacing={2}>\r\n            <CustomInput\r\n              id=\"noTelpon\"\r\n              name=\"noTelpon\"\r\n              label={\r\n                stateBahasa === \"indonesia\" ? \"No Telp 1\" : \"Phone Number 1\"\r\n              }\r\n              fullWidth\r\n              required\r\n              value={noTelpon}\r\n              onChange={(el) => changeForm(el, \"identitas\")}\r\n              helperText={formInvalid.noTelpon}\r\n              className={classes.inputPhone}\r\n              inputType=\"phone-number\"\r\n              error={formInvalid.noTelpon ? true : false}\r\n            />\r\n          </Stack>\r\n          <FormControl fullWidth required>\r\n            {/* <InputLabel id=\"agama\">Agama - Religion</InputLabel> */}\r\n            <InputLabel id=\"agama\">\r\n              {stateBahasa === \"indonesia\" ? \"Agama\" : \"Religion\"}\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"agama\"\r\n              id=\"agama\"\r\n              name=\"agama\"\r\n              value={agama}\r\n              onChange={(el) => changeForm(el, \"identitas\")}\r\n\r\n              //   value={age}\r\n              //   label=\"Age\"\r\n              //   onChange={handleChange}\r\n            >\r\n              {stateAgama &&\r\n                stateAgama.map((item) => {\r\n                  return (\r\n                    <MenuItem\r\n                      key={\"agama\" + item.ref_agama_id}\r\n                      value={item.ref_agama_id}\r\n                    >\r\n                      {item.ref_agama_ket}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl fullWidth required>\r\n            {/* <InputLabel id=\"agama\">\r\n              Status Pernikahan - Marital Status\r\n            </InputLabel> */}\r\n            <InputLabel id=\"agama\">\r\n              {stateBahasa === \"indonesia\"\r\n                ? \"Status Pernikahan\"\r\n                : \"Marital Status\"}\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"statusNikah\"\r\n              id=\"statusNikah\"\r\n              name=\"statusNikah\"\r\n              value={statusNikah}\r\n              onChange={(el) => changeForm(el, \"identitas\")}\r\n            >\r\n              {stateStatusNikah &&\r\n                stateStatusNikah.map((item) => {\r\n                  return (\r\n                    <MenuItem\r\n                      key={\"jenisID\" + item.stat_id}\r\n                      value={item.stat_id}\r\n                    >\r\n                      {item.stat_ket}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            id=\"tglKunjungan\"\r\n            name=\"tglKunjungan\"\r\n            label={\r\n              stateBahasa === \"indonesia\" ? \"Tanggal Kunjungan\" : \"Visit Date\"\r\n            }\r\n            // label=\"Tanggal Lahir - Birthdate\"\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            inputProps={{\r\n              min: moment().add(1, \"days\").format(\"YYYY-MM-DD\"),\r\n              max: moment().add(3, \"days\").format(\"YYYY-MM-DD\"),\r\n            }}\r\n            // min={moment().format(\"YYYY-MM-DD\")}\r\n            // max={moment().add(3, \"days\").format(\"YYYY-MM-DD\")}\r\n            type={\"date\"}\r\n            value={tglKunjungan}\r\n            onChange={(el) => changeForm(el, \"vaksin\")}\r\n            error={formInvalid.tglKunjungan ? true : false}\r\n            helperText={formInvalid.tglKunjungan}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleSubmit}\r\n            disabled={submitted}\r\n            // onClick={() => navigate(\"/\")}\r\n          >\r\n            {stateBahasa === \"indonesia\" ? \"Daftar\" : \"Submit\"}\r\n          </Button>\r\n        </Stack>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stateProduk: state.master.produk,\r\n    stateIdentitas: state.auth.identitas,\r\n    stateAgama: state.master.agama,\r\n    stateJenisID: state.master.jenisIdentitas,\r\n    stateStatusNikah: state.master.statusNikah,\r\n    stateRegVaksin: state.register.vaksin,\r\n    stateError: state.app.error,\r\n    statePropinsi: state.master.propinsi,\r\n    stateKotamadya: state.master.kotamadya,\r\n    stateKecamatan: state.master.kecamatan,\r\n    stateKelurahan: state.master.kelurahan,\r\n    stateBahasa: state.app.bahasa,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actResetVaksin: () => dispatch(resetVaksin()),\r\n    actResetIdentitas: () => dispatch(resetIdentitas()),\r\n    actGetIdentitas: (nik) => dispatch(getIdentitas(nik)),\r\n    actSetFormVaksin: (body) => dispatch(setFormVaksin(body)),\r\n    actSetIdentitas: (body) => dispatch(setIdentitas(body)),\r\n    actGetProduk: (action) => dispatch(getDataProduk(action)),\r\n    actGetAgama: (action) => dispatch(getAgama(action)),\r\n    actGetJenisID: (action) => dispatch(getJenisIdentitas(action)),\r\n    actGetStatusNikah: (action) => dispatch(getStatusNikah(action)),\r\n    actRegisterVaksin: (body, action) => dispatch(registerVaksin(body, action)),\r\n    actGetPropinsi: (body) => dispatch(getPropinsi(body)),\r\n    actGetKotamadya: (body) => dispatch(getKotamadya(body)),\r\n    actGetKecamatan: (body) => dispatch(getKecamatan(body)),\r\n    actGetKelurahan: (body) => dispatch(getKelurahan(body)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterVaksin);\r\n"],"names":["useStyles","makeStyles","container","padding","props","classes","children","setOpen","open","onSubmit","label","buttonText","noClose","handleClose","onClose","fullWidth","className","spacing","item","xs","justifyContent","alignItems","variant","onClick","CustomCanvas","styled","barcode","action","ref","useRef","React","disabled","setDisabled","jsbarcode","current","setTimeout","align","id","gh","toDataURL","a","document","createElement","href","download","click","img","width","maxHeight","title","type","Dialog","Container","Grid","IconButton","Close","src","failImg","succImg","alt","Typography","Button","html","PhoneNumberCustom","onChange","other","getInputRef","onValueChange","values","target","name","value","format","allowLeadingZeros","allowNegative","decimalScale","NumberFormatMR","formattedValue","CustomInput","input","inputType","params","InputProps","inputComponent","error","helperText","PhoneNumberInput","size","NoMrInput","DefaultInput","propTypes","PropTypes","root","borderRadius","cursor","height","objectFit","connect","state","stateUser","auth","user","dispatch","actLogout","actions","logout","navigate","useNavigate","doctorImg","display","iconButton","border","marginRight","icon","color","PRI_500","text","NTRL_700","ChevronLeftOutlined","backgroundColor","PRI_400","NTRL_100","subtitle","Stack","ProfileBar","WithBackground","keys","produkId","Joi","empty","messages","jenisId","jenisIdnomor","min","namaLengkap","tempatLahir","tglLahir","jenisKelamin","propinsi","kotaDati","kecamatan","kelurahan","alamat","rt","rw","alamatDomisili","kodePos","noTelpon","agama","tglKunjungan","statusNikah","allow","isSelectedFieldValid","field","validate","langContainer","overflowX","dialogImg","stateProduk","master","produk","stateIdentitas","identitas","stateAgama","stateJenisID","jenisIdentitas","stateStatusNikah","stateRegVaksin","register","vaksin","stateError","app","statePropinsi","stateKotamadya","kotamadya","stateKecamatan","stateKelurahan","stateBahasa","bahasa","actResetVaksin","resetVaksin","actResetIdentitas","resetIdentitas","actGetIdentitas","nik","getIdentitas","actSetFormVaksin","body","setFormVaksin","actSetIdentitas","setIdentitas","actGetProduk","getDataProduk","actGetAgama","getAgama","actGetJenisID","getJenisIdentitas","actGetStatusNikah","getStatusNikah","actRegisterVaksin","registerVaksin","actGetPropinsi","getPropinsi","actGetKotamadya","getKotamadya","actGetKecamatan","getKecamatan","actGetKelurahan","getKelurahan","sameAddress","setHandleSameAddress","errorForm","setErrorForm","succForm","setSuccForm","formInvalid","setInvalid","changeForm","elem","message","key","changeFormAuto","submitted","setSubmitted","ActionDialog","Barcode","CustomDialog","TopNav","FormControl","required","InputLabel","Select","labelId","el","map","index","MenuItem","ref_prod_id","toString","ref_prod_nama","ref_jki_id","ref_jki_ket","TextField","onBlur","length","InputLabelProps","shrink","inputProps","max","moment","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","Autocomplete","freeSolo","val","inputValue","onInputChange","event","newInputValue","options","option","ref_propinsi_id","ref_propinsi_nama","renderInput","ref_kotadati2_id","ref_kotadati2_nama","ref_kcamatan_id","ref_kcamatan_nama","ref_klurahan_id","ref_klurahan_nama","direction","FormGroup","Checkbox","checked","inputPhone","ref_agama_id","ref_agama_ket","stat_id","stat_ket","add","data","isValid","success","failed","msg","details","context"],"sourceRoot":""}