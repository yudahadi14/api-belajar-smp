{"version":3,"file":"static/js/209.520b1511.chunk.js","mappings":"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","sources":["pages/DocterListPage/index.js"],"sourcesContent":["import Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Container from \"@mui/material/Container\";\r\nimport React from \"react\";\r\nimport FormatListBulletedIcon from \"@mui/icons-material/FormatListBulleted\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport {\r\n  Banner,\r\n  SearchBar,\r\n  CardImg,\r\n  ProfileBar,\r\n  BottomNav,\r\n  TopNav,\r\n} from \"../../components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport {\r\n  getDokterList,\r\n  getPoliList,\r\n  setDetailDoctor,\r\n} from \"../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport doctorDefault from \"../../assets/doctors.png\";\r\nimport { BASE_URL_IMG } from \"../../helpers/common/config\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textContent: {\r\n    padding: \"0 8px !important\",\r\n    flexGrow: 100,\r\n  },\r\n  filterContent: {\r\n    flexGrow: 100,\r\n  },\r\n  searchBar: {\r\n    display: \"flex\",\r\n  },\r\n  root: {\r\n    paddingTop: \"16px\",\r\n    paddingBottom: \"16vh\",\r\n  },\r\n}));\r\n\r\nconst DocterListPage = (props) => {\r\n  const {\r\n    actGetDokterList,\r\n    stateDoctorList,\r\n    statePoliList,\r\n    actGetPoliList,\r\n    actSetDetailDoctor,\r\n  } = props;\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  const [namaDokter, setNamaDokter] = React.useState(\"\");\r\n\r\n  const handleSubmitSearch = () => {\r\n    actGetDokterList({\r\n      namaDokter,\r\n      layananId: \"\",\r\n    });\r\n  };\r\n  React.useEffect(() => {\r\n    actGetDokterList({\r\n      namaDokter: \"\",\r\n      layananId: \"\",\r\n    });\r\n    actGetPoliList();\r\n  }, []);\r\n\r\n  const handleClickLayanan = (id) => {\r\n    actGetDokterList({\r\n      namaDokter,\r\n      layananId: id,\r\n    });\r\n  };\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Stack spacing={2}>\r\n        <TopNav\r\n          type=\"back\"\r\n          title={\"Halaman Dokter\"}\r\n          click={() => {\r\n            navigate(-1);\r\n          }}\r\n        />\r\n        <ProfileBar />\r\n        <div className={classes.searchBar}>\r\n          <SearchBar\r\n            label=\"Cari Dokter\"\r\n            onChange={(el) => setNamaDokter(el.target.value)}\r\n            value={namaDokter}\r\n            onSubmit={handleSubmitSearch}\r\n          />\r\n          {/* <Paper>\r\n            <IconButton>\r\n              <FormatListBulletedIcon />\r\n            </IconButton>\r\n          </Paper> */}\r\n        </div>\r\n        <Swiper\r\n          // pagination={true}\r\n          slidesPerView={1.1}\r\n          spaceBetween={10}\r\n          className=\"mySwiper\"\r\n        >\r\n          {[1, 2, 3, 4].map((item, index) => {\r\n            return (\r\n              <SwiperSlide key={\"carousel_\" + index}>\r\n                <Banner />\r\n              </SwiperSlide>\r\n            );\r\n          })}\r\n        </Swiper>\r\n        <Swiper\r\n          // pagination={true}\r\n          slidesPerView={4}\r\n          spaceBetween={10}\r\n          className=\"mySwiper\"\r\n        >\r\n          {statePoliList &&\r\n            statePoliList.map((item, index) => {\r\n              let title = item.ref_layanan_nama.substring(0, 12);\r\n              return (\r\n                <SwiperSlide key={\"poli_\" + index}>\r\n                  <CardImg\r\n                    type=\"small\"\r\n                    title={title}\r\n                    text=\"Bedah Hati\"\r\n                    click={() => handleClickLayanan(item.id_poli)}\r\n                  />\r\n                </SwiperSlide>\r\n                // <Grid item xs={3}>\r\n                //   <CardImg\r\n                //     type=\"small\"\r\n                //     title=\"Dr Qahtan\"\r\n                //     text=\"Bedah Hati\"\r\n                //     click={() => navigate(\"/make-appointment\")}\r\n                //   />\r\n                // </Grid>\r\n              );\r\n            })}\r\n        </Swiper>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"subtitle2\">Dokter Kami</Typography>\r\n          </Grid>\r\n          <Grid container item xs={12} spacing={2}>\r\n            {stateDoctorList &&\r\n              stateDoctorList.map((item, index) => {\r\n                return (\r\n                  <Grid item xs={6} md={4} key={\"dokter\" + index}>\r\n                    <CardImg\r\n                      type=\"medium\"\r\n                      title={item.nama_dokter}\r\n                      text={item.ref_layanan_nama}\r\n                      img={\r\n                        item.filename ? BASE_URL_IMG + \"/\" + item.filename :\r\n                        doctorDefault\r\n                      }\r\n                      click={() =>\r\n                        actSetDetailDoctor(item.peg_id, () =>\r\n                          navigate(`/doctor-detail/${item.peg_id}`)\r\n                        )\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n          </Grid>\r\n        </Grid>\r\n      </Stack>\r\n      <BottomNav />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stateDoctorList: state.master.doctorList,\r\n    statePoliList: state.master.poliList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actSetDetailDoctor: (body, action) =>\r\n      dispatch(setDetailDoctor(body, action)),\r\n    actGetDokterList: (body, action) => dispatch(getDokterList(body, action)),\r\n    actGetPoliList: (body, action) => dispatch(getPoliList(body, action)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DocterListPage);\r\n"],"names":["useStyles","makeStyles","textContent","padding","flexGrow","filterContent","searchBar","display","root","paddingTop","paddingBottom","connect","state","stateDoctorList","master","doctorList","statePoliList","poliList","dispatch","actSetDetailDoctor","body","action","setDetailDoctor","actGetDokterList","getDokterList","actGetPoliList","getPoliList","props","classes","navigate","useNavigate","React","namaDokter","setNamaDokter","layananId","className","spacing","type","title","click","label","onChange","el","target","value","onSubmit","slidesPerView","spaceBetween","map","item","index","ref_layanan_nama","substring","text","id","id_poli","container","xs","variant","md","nama_dokter","img","filename","BASE_URL_IMG","doctorDefault","peg_id"],"sourceRoot":""}