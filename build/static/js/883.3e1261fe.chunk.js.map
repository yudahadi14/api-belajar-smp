{"version":3,"file":"static/js/883.3e1261fe.chunk.js","mappings":"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","sources":["components/CardPatient/index.js","pages/ProfilePage/index.js"],"sourcesContent":["import React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport Close from \"@mui/icons-material/Close\";\r\nimport QRCode from \"react-qr-code\";\r\nimport { Box } from \"@mui/material\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PRI_300 } from \"../../theme/colors\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  qr: {\r\n    width: \"50px\",\r\n    height: \"50px\",\r\n    backgroundColor: \"#000\",\r\n  },\r\n  cardPaper: {\r\n    padding: \"16px\",\r\n    // minHeight: \"150px\",\r\n    width: \"auto\",\r\n    height: \"200px\",\r\n    display: \"flex\",\r\n    alignItems: \"end\",\r\n    borderRadius: \"16px !important\",\r\n    backgroundColor: PRI_300 + \"!important\",\r\n    // backgroundImage: `url(${CHBCImage})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  root: {\r\n    marginTop: \"32px\",\r\n  },\r\n}));\r\nconst CardPatient = (props) => {\r\n  const { name, code } = props;\r\n  const classes = useStyles();\r\n  const [qrDialog, setQRDialog] = React.useState(false);\r\n  const handleDialog = () => {\r\n    setQRDialog(!qrDialog);\r\n  };\r\n  return (\r\n    <>\r\n      <Dialog open={qrDialog}>\r\n        <Paper sx={{ padding: \"16px\" }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} container justifyContent=\"end\">\r\n              <IconButton onClick={handleDialog}>\r\n                <Close />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={12} container justifyContent=\"center\">\r\n              {code && <QRCode value={code} size={256} />}\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Dialog>\r\n      <Paper className={classes.cardPaper}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} container justifyContent=\"end\">\r\n            {code && (\r\n              <Box\r\n                sx={{\r\n                  padding: \"3px\",\r\n                  borderRadius: \"3px\",\r\n                  backgroundColor: \"#FFF\",\r\n                  display: \"inline-block\",\r\n                }}\r\n              >\r\n                <QRCode value={code} size={32} onClick={handleDialog} />\r\n              </Box>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} container justifyContent=\"end\">\r\n            <Typography\r\n              variant=\"body1\"\r\n            >{`${name} - ${code}`}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nCardPatient.propTypes = {\r\n  code: PropTypes.any.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CardPatient;\r\n","import React from \"react\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport CardPatient from \"../../components/CardPatient\";\r\nimport { connect } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport TopNav from \"../../components/TopNav\";\r\nimport ModalNotification from \"../../components/ModalNotification\";\r\nimport { logout } from \"../../redux/actions\";\r\nimport handChatImg from \"../../assets/hand_chat.png\";\r\nimport handSucc from \"../../assets/hand_succ.png\";\r\nimport pelayananImg from \"../../assets/language.png\";\r\nimport rsudcPNG from \"../../assets/rsudc_logo_old.png\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  profileImg: {\r\n    width: \"150px\",\r\n    height: \"150px\",\r\n    borderRadius: \"50%\",\r\n    objectFit: \"contain\",\r\n    backgroundColor: \"#F2F2F2\",\r\n    position: \"absolute\",\r\n  },\r\n  profileContainer: {\r\n    position: \"relative\",\r\n    height: \"150px\",\r\n    width: \"150px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  root: {\r\n    marginTop: \"32px\",\r\n  },\r\n  profileEdit: {\r\n    position: \"absolute\",\r\n    left: \"0\",\r\n    bottom: \"0\",\r\n    borderRadius: \"50%\",\r\n    zIndex: \"2\",\r\n    backgroundColor: \"#FFF\",\r\n  },\r\n  loading: {\r\n    position: \"absolute\",\r\n  },\r\n  rsudLogo: {\r\n    maxHeight: \"30px\",\r\n    objectFit: \"contain\",\r\n    width: \"auto\"\r\n  }\r\n}));\r\nconst ProfilePage = (props) => {\r\n  const { actLogout, stateBahasa, stateUser } = props;\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [image, setImg] = React.useState(\"\");\r\n  const buttonImgRef = React.useRef(null);\r\n  const handleEdit = () => {\r\n    buttonImgRef.current.click();\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const [notif, setNotif] = React.useState(false);\r\n  const [done, setDone] = React.useState(false);\r\n  const handleBack = () => {\r\n    navigate(-1);\r\n  };\r\n  const handleLogout = () => {\r\n    return actLogout(navigate(\"/home\", { replace: true }));\r\n    //   actLogout(navigate(stateLoginPath, { replace: true }));\r\n  };\r\n  //   React.useEffect(() => {\r\n  //     if (!image) {\r\n  //       setImg(BASE_URL_IMG + \"/\" + stateAuth.photo_profile);\r\n  //     }\r\n  //   }, [stateAuth, image]);\r\n  //   const changeImg = async (event) => {\r\n  //     let file = event.target.files[0];\r\n  //     setLoading(true);\r\n\r\n  //     function blobToBase64(blob) {\r\n  //       return new Promise((resolve, reject) => {\r\n  //         const reader = new FileReader();\r\n  //         reader.readAsDataURL(blob);\r\n  //         reader.onload = () => resolve(reader.result);\r\n  //         reader.onerror = (error) => {\r\n  //           reject(error);\r\n  //         };\r\n  //         return reader;\r\n  //       });\r\n  //     }\r\n\r\n  //     if (file) {\r\n  //       const options = {\r\n  //         maxSizeMB: 0.5,\r\n  //         useWebWorker: true,\r\n  //       };\r\n  //       try {\r\n  //         const compressedFile = await imageCompression(file, options);\r\n  //         return blobToBase64(compressedFile)\r\n  //           .then((data) => {\r\n  //             actUpdateMember(data, setImg(data));\r\n  //           })\r\n  //           .catch((err) => {\r\n  //             alert(err.toString());\r\n  //           });\r\n  //       } catch (error) {\r\n  //       } finally {\r\n  //         setLoading(false);\r\n  //       }\r\n  //     }\r\n  //   };\r\n  return (\r\n    <>\r\n      <ModalNotification\r\n        open={done}\r\n        setOpen={handleLogout}\r\n        title={\"Logged Out\"}\r\n        subtitle={\"\"}\r\n        img={handSucc}\r\n        actAbort={handleLogout}\r\n      />\r\n\r\n      <ModalNotification\r\n        open={notif}\r\n        setOpen={setNotif}\r\n        title={\r\n          stateBahasa === \"indonesia\" ? \"Apakah anda yakin?\" : \"Are you sure?\"\r\n        }\r\n        subtitle={\"\"}\r\n        img={handChatImg}\r\n        actContinue={() => {\r\n          setDone(true);\r\n          setNotif(false);\r\n        }}\r\n        abortText={stateBahasa === \"indonesia\" ? \"Tidak\" : \"No\"}\r\n        continueText={stateBahasa === \"indonesia\" ? \"Ya\" : \"Yes\"}\r\n      />\r\n      <Container className={classes.root}>\r\n        <Stack spacing={2}>\r\n          <TopNav click={handleBack} title=\"Profile\" />\r\n          <Grid container justifyContent=\"center\">\r\n            <div className={classes.profileContainer}>\r\n              {image ? (\r\n                <img className={classes.profileImg} alt=\"profile\" src={image} />\r\n              ) : (\r\n                <img\r\n                  className={classes.profileImg}\r\n                  alt=\"profile\"\r\n                  src={pelayananImg}\r\n                />\r\n              )}\r\n              {loading && <CircularProgress className={classes.loading} />}\r\n              {/* <div className={classes.profileEdit}>\r\n                <IconButton onClick={handleEdit}>\r\n                  <Edit />\r\n                </IconButton>\r\n              </div> */}\r\n            </div>\r\n            {/* <input type=\"file\" onChange={changeImg} ref={buttonImgRef} hidden /> */}\r\n          </Grid>\r\n          <img src={rsudcPNG} alt=\"\" className={classes.rsudLogo} />\r\n\r\n          <CardPatient code={stateUser.mr} name={stateUser.nama} />\r\n\r\n          {/* <Typography variant=\"subtitle1\" align=\"center\">\r\n            {stateAuth.member_name + \" #\" + stateAuth.no_anggota}\r\n          </Typography>\r\n          <Typography variant=\"body1\" align=\"center\">\r\n            {stateAuth.bagian_bidang}\r\n          </Typography>\r\n          <Typography variant=\"body1\" align=\"center\">\r\n            {stateAuth.phone_no}\r\n          </Typography> */}\r\n          <Button variant=\"outlined\" fullWidth onClick={() => setNotif(true)}>\r\n            Logout\r\n          </Button>\r\n        </Stack>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  stateBahasa: state.app.bahasa,\r\n    stateUser: state.auth.user,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // actUpdateMember: (body, action) => dispatch(updateMember(body, action)),\r\n    // actLogout: (action) => dispatch(setLogout(action)),\r\n    actLogout: (actions) => dispatch(logout(actions)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);\r\n"],"names":["useStyles","makeStyles","qr","width","height","backgroundColor","cardPaper","padding","display","alignItems","borderRadius","PRI_300","backgroundRepeat","backgroundSize","backgroundPosition","root","marginTop","props","name","code","classes","React","qrDialog","setQRDialog","handleDialog","Dialog","open","Paper","sx","Grid","container","spacing","item","xs","justifyContent","IconButton","onClick","Close","value","size","className","Box","Typography","variant","profileImg","objectFit","position","profileContainer","profileEdit","left","bottom","zIndex","loading","rsudLogo","maxHeight","connect","state","stateBahasa","app","bahasa","stateUser","auth","user","dispatch","actLogout","actions","logout","image","navigate","useNavigate","notif","setNotif","done","setDone","handleLogout","replace","ModalNotification","setOpen","title","subtitle","img","handSucc","actAbort","handChatImg","actContinue","abortText","continueText","Container","Stack","TopNav","click","alt","src","pelayananImg","CircularProgress","rsudcPNG","mr","nama","Button","fullWidth"],"sourceRoot":""}