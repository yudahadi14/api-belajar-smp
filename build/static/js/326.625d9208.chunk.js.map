{"version":3,"file":"static/js/326.625d9208.chunk.js","mappings":"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","sources":["pages/RegisterUserPage/index.js"],"sourcesContent":["import React from \"react\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CustomInput from \"../../components/CustomInput\";\r\nimport ModalNotification from \"../../components/ModalNotification\";\r\nimport TopNav from \"../../components/TopNav\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../redux/actions/auth\";\r\nimport failedImg from \"../../assets/hand_fail.png\";\r\nimport succImg from \"../../assets/hand_succ.png\";\r\nimport moment from \"moment\";\r\nimport { Typography } from \"@mui/material\";\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    paddingTop: \"16px\",\r\n  },\r\n}));\r\n\r\nconst RegisterUserPage = (props) => {\r\n  const { actRegister, stateBahasa } = props;\r\n  const classes = useStyles();\r\n  const [dialogMr, setDialogMr] = React.useState(true);\r\n  const [openSucc, setOpenSucc] = React.useState(false);\r\n  const [openFail, setOpenFail] = React.useState({\r\n    open: false,\r\n    message: \"\",\r\n  });\r\n  const handleFail = (msg) => {\r\n    setOpenFail({\r\n      open: true,\r\n      message: msg,\r\n    });\r\n  };\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [rePassword, setRePassword] = React.useState(\"\");\r\n  const [tglLahir, setTglLahir] = React.useState(\"\");\r\n  const [noMr, setNoMr] = React.useState(\"\");\r\n\r\n  const changePwd = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const changeRePwd = (e) => {\r\n    setRePassword(e.target.value);\r\n  };\r\n  const navigate = useNavigate();\r\n\r\n  const handleRegister = () => {\r\n    return actRegister(\r\n      {\r\n        // no_mr: noMr,\r\n        password: password,\r\n        tgl_lahir: tglLahir,\r\n        no_mr: noMr ? noMr.replace(/-/g, \"\") : \"\",\r\n      },\r\n      {\r\n        success: () => setOpenSucc(true),\r\n        failed: (msg) => handleFail(msg),\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <ModalNotification\r\n        open={openSucc}\r\n        setOpen={() => navigate(\"/home\")}\r\n        title={\"Logged In\"}\r\n        subtitle={\"\"}\r\n        img={succImg}\r\n        actAbort={() => navigate(\"/home\")}\r\n      />\r\n      <ModalNotification\r\n        open={openFail.open}\r\n        setOpen={(open) => setOpenFail({ ...openFail, open: open })}\r\n        title={\"Failed\"}\r\n        subtitle={openFail.message}\r\n        img={failedImg}\r\n      />\r\n      <ModalNotification\r\n        open={dialogMr}\r\n        setOpen={setDialogMr}\r\n        title={\r\n          stateBahasa === \"indonesia\" ? \"Punya nomer MR?\" : \"Do you have MR?\"\r\n        }\r\n        subtitle={\r\n          stateBahasa === \"indonesia\"\r\n            ? \"Apakah anda memiliki nomer mr atau kartu pasien\"\r\n            : \"Do you have MR or patient's card\"\r\n        }\r\n        actAbort={() => navigate(\"/register\")}\r\n        abortText=\"No\"\r\n        continueText=\"Yes\"\r\n        actContinue={() => setDialogMr(false)}\r\n      />\r\n      <Container className={classes.root}>\r\n        <Stack spacing={2}>\r\n          <TopNav type=\"back\" title=\"Register\" click={() => navigate(-1)} />\r\n          <CustomInput\r\n            inputType=\"no_mr\"\r\n            value={noMr}\r\n            onChange={(e) => setNoMr(e.target.value)}\r\n            id=\"no_mr\"\r\n            name=\"no_mr\"\r\n            label=\"No MR\"\r\n          />\r\n          <TextField\r\n            id=\"tglLahir\"\r\n            name=\"tglLahir\"\r\n            label={stateBahasa === \"indonesia\" ? \"Tanggal Lahir\" : \"Birthdate\"}\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            inputProps={{\r\n              max: moment().format(\"YYYY-MM-DD\"),\r\n            }}\r\n            type={\"date\"}\r\n            value={tglLahir}\r\n            onChange={(e) => setTglLahir(e.target.value)}\r\n          />\r\n          <TextField\r\n            id=\"outlined-password-input\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onChange={changePwd}\r\n          />\r\n          <TextField\r\n            id=\"outlined-password-input\"\r\n            label=\"Re-Password\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={rePassword}\r\n            onChange={changeRePwd}\r\n          />\r\n          {password !== rePassword && (\r\n            <Typography variant=\"body2\" color=\"red\">\r\n              {stateBahasa === \"indonesia\"\r\n                ? \"password tidak sama\"\r\n                : \"password not match\"}\r\n            </Typography>\r\n          )}\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleRegister}\r\n            disabled={!password || password !== rePassword}\r\n            // onClick={() => navigate(\"/\")}\r\n          >\r\n            Register\r\n          </Button>\r\n          <Button variant=\"text\" onClick={() => navigate(\"/login\")}>\r\n            {stateBahasa === \"indonesia\"\r\n              ? \"Punya akun? Masuk\"\r\n              : \"Have account? Login\"}\r\n          </Button>\r\n        </Stack>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stateBahasa: state.app.bahasa,\r\n    // stateCompany: state.app.company,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actRegister: (body, action) => dispatch(registerUser(body, action)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterUserPage);\r\n"],"names":["useStyles","makeStyles","root","paddingTop","connect","state","stateBahasa","app","bahasa","dispatch","actRegister","body","action","registerUser","props","classes","React","dialogMr","setDialogMr","openSucc","setOpenSucc","open","message","openFail","setOpenFail","password","setPassword","rePassword","setRePassword","tglLahir","setTglLahir","noMr","setNoMr","navigate","useNavigate","setOpen","title","subtitle","img","succImg","actAbort","failedImg","abortText","continueText","actContinue","className","spacing","type","click","inputType","value","onChange","e","target","id","name","label","required","InputLabelProps","shrink","inputProps","max","moment","format","autoComplete","variant","color","onClick","tgl_lahir","no_mr","replace","success","failed","msg","handleFail","disabled"],"sourceRoot":""}