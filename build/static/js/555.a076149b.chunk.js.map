{"version":3,"file":"static/js/555.a076149b.chunk.js","mappings":"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","sources":["components/DialogBahasa/index.js","pages/OnBoardingPage/index.js"],"sourcesContent":["import Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport { ImgContribute } from \"..\";\r\nimport languageImg from \"../../assets/language.gif\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setBahasa, setBahasaOpen } from \"../../redux/actions\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    padding: \"16px 0\",\r\n  },\r\n  langContainer: {\r\n    padding: \"16px 0\",\r\n    overflowX: \"hidden\",\r\n  },\r\n  dialogImg: {\r\n    height: \"250px\",\r\n    width: \"auto\",\r\n  },\r\n}));\r\nconst DialogBahasa = (props) => {\r\n  const classes = useStyles();\r\n  const { stateBahasaOpen, actSetBahasa, actSetBahasaOpen } = props;\r\n  const handleBahasa = (bahasa) => {\r\n    actSetBahasa(bahasa);\r\n    actSetBahasaOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Dialog open={stateBahasaOpen}>\r\n        <Container className={classes.langContainer}>\r\n          <Grid container spacing={2}>\r\n            <Grid xs={12} item container justifyContent={\"center\"}>\r\n              <ImgContribute\r\n                title=\"People illustrations by Storyset\"\r\n                src={languageImg}\r\n                alt=\"Contribute\"\r\n                link=\"https://storyset.com/people\"\r\n              />\r\n            </Grid>\r\n            <Grid xs={12} item>\r\n              <Typography align=\"center\" variant=\"body1\">\r\n                Bahasa yang digunakan / Language\r\n              </Typography>\r\n            </Grid>\r\n            <Grid xs={12} item>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => handleBahasa(\"indonesia\")}\r\n              >\r\n                Bahasa Indonesia\r\n              </Button>\r\n            </Grid>\r\n            <Grid xs={12} item>\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={() => handleBahasa(\"english\")}\r\n              >\r\n                English\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\n// DialogBahasa.propTypes = {\r\n//   open: PropTypes.bool,\r\n// };\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stateBahasa: state.app.bahasa,\r\n    stateBahasaOpen: state.app.bahasaOpen,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actSetBahasa: (bahasa) => dispatch(setBahasa(bahasa)),\r\n    actSetBahasaOpen: (bahasa) => dispatch(setBahasaOpen(bahasa)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogBahasa);\r\n","import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport { Carousel, LowMemoryError } from \"../../components\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n// import { getOnboard } from \"../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport doctorImg from \"../../assets/doctors.gif\";\r\nimport bedImg from \"../../assets/bed.png\";\r\nimport labGIF from \"../../assets/laboratorium.gif\";\r\nimport seePhoneGIF from \"../../assets/see_phone.png\";\r\nimport dingkesImg from \"../../assets/dinkes_sm.png\";\r\nimport rsudOldImg from \"../../assets/logo_new.png\";\r\nimport dkiImg from \"../../assets/dki.png\";\r\nimport DialogBahasa from \"../../components/DialogBahasa\";\r\n\r\nconst useStyles = makeStyles({\r\n  rounded: {\r\n    borderRadius: \"10px !important\",\r\n    width: \"100%\",\r\n  },\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  iconImg: {\r\n    height: \"35px\",\r\n    width: \"auto\",\r\n  },\r\n  iconContainer: {\r\n    paddingTop: \"16px\",\r\n  },\r\n});\r\n\r\nconst OnBoardingPage = (props) => {\r\n  const { error, stateUser, stateBahasa } = props;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  if (error) {\r\n    navigate(\"/exception-handling\");\r\n  }\r\n  const classes = useStyles();\r\n  // eslint-disable-next-line no-unused-vars\r\n  const toRoom = () => {\r\n    navigate(\"/list-room\");\r\n  };\r\n  // eslint-disable-next-line no-unused-vars\r\n  const toRegister = () => {\r\n    navigate(\"/register\");\r\n  };\r\n  // eslint-disable-next-line no-unused-vars\r\n  const toVaccine = () => {\r\n    navigate(\"/register-vaksin\");\r\n  };\r\n  const toHome = () => {\r\n    navigate(\"/home\");\r\n  };\r\n  const toLogin = () => {\r\n    navigate(\"/login\");\r\n  };\r\n  React.useEffect(() => {\r\n    // actGetOnboard();\r\n  }, []);\r\n  let carousel = [\r\n    {\r\n      image: doctorImg,\r\n      link: \"https://storyset.com/people\",\r\n      text: \"Rumah Sakit Umum Daerah Cengkareng berkomitmen untuk mengembangkan layanan prima yang mampu bersaing dan menyelenggarakan pendidikan tenaga kesehatan berkualitas\",\r\n      title: \"Hi, Welcome to RSUD Cengkareng!\",\r\n    },\r\n    {\r\n      image: seePhoneGIF,\r\n      link: \"https://storyset.com/people\",\r\n      text: \"Daftar tanpa ribet dari rumah\",\r\n      title: \"Daftar Online dari Rumah!\",\r\n    },\r\n    {\r\n      image: labGIF,\r\n      link: \"https://storyset.com/people\",\r\n      text: \"Daftarkan diri anda untuk melakukan vaksinisasi\",\r\n      title: \"Layanan Vaksin\",\r\n    },\r\n    {\r\n      image: bedImg,\r\n      link: \"https://storyset.com/people\",\r\n      text: \"Lihat data kamar yang tersedia saat ini\",\r\n      title: \"Online Data Kamar\",\r\n    },\r\n  ];\r\n  // carouselArr.map((item) => {\r\n  //   carousel.push(item);\r\n  // });\r\n  const errorAtt = localStorage.getItem(\"registerAttempt\")\r\n    ? parseInt(localStorage.getItem(\"registerAttempt\")) > 0 &&\r\n      parseInt(localStorage.getItem(\"registerAttempt\")) % 3 === 0\r\n      ? true\r\n      : false\r\n    : false;\r\n  const [lowError, setLowError] = React.useState(errorAtt);\r\n  return (\r\n    <>\r\n      <DialogBahasa />\r\n      <Container>\r\n        <LowMemoryError open={lowError} setOpen={setLowError} />\r\n        <Grid container className={classes.iconContainer} spacing={1}>\r\n          <Grid item>\r\n            <img src={dkiImg} alt=\"\" className={classes.iconImg} />\r\n          </Grid>\r\n          <Grid item>\r\n            <img src={dingkesImg} alt=\"\" className={classes.iconImg} />\r\n          </Grid>\r\n          <Grid item>\r\n            <img src={rsudOldImg} alt=\"\" className={classes.iconImg} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          spacing={4}\r\n          className={classes.root}\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={12}>\r\n            <div className={classes.rounded}>\r\n              <Carousel type=\"big\" carousel={carousel} />\r\n            </div>\r\n          </Grid>\r\n          <Grid container item xs={12} spacing={2}>\r\n            {/* <Grid item xs={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              fullWidth\r\n              onClick={toVaccine}\r\n              className={classes.buttonFoot}\r\n            >\r\n              DAFTAR VAKSIN / VACCINATION\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              fullWidth\r\n              onClick={toRegister}\r\n              className={classes.buttonFoot}\r\n            >\r\n              DAFTAR PASIEN BARU / REGISTER\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              fullWidth\r\n              onClick={toRoom}\r\n              className={classes.buttonFoot}\r\n            >\r\n              DATA KAMAR / AVAILABLE ROOMS\r\n            </Button>\r\n          </Grid> */}\r\n            {stateUser && (\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                  onClick={toHome}\r\n                  className={classes.buttonFoot}\r\n                >\r\n                  {stateBahasa === \"indonesia\"\r\n                    ? \"Mari Jaga Kesehatan\"\r\n                    : \"Let's Stay Healthy\"}\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n            {!stateUser && (\r\n              <>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    fullWidth\r\n                    onClick={toLogin}\r\n                    className={classes.buttonFoot}\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onClick={toHome}\r\n                    className={classes.buttonFoot}\r\n                  >\r\n                    Tidak memiliki akun\r\n                  </Button>\r\n                </Grid>\r\n              </>\r\n            )}\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"body1\" align=\"center\">\r\n                &copy;SIM RSUD Cengkareng\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    error: state.app.error,\r\n    stateUser: state.auth.token,\r\n    stateBahasa: state.app.bahasa,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // actGetOnboard: (body, action) => () => {},\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OnBoardingPage);\r\n"],"names":["useStyles","makeStyles","root","padding","langContainer","overflowX","dialogImg","height","width","connect","state","stateBahasa","app","bahasa","stateBahasaOpen","bahasaOpen","dispatch","actSetBahasa","setBahasa","actSetBahasaOpen","setBahasaOpen","props","classes","handleBahasa","Dialog","open","Container","className","Grid","container","spacing","xs","item","justifyContent","title","src","languageImg","alt","link","Typography","align","variant","Button","onClick","rounded","borderRadius","iconImg","iconContainer","paddingTop","error","stateUser","auth","token","navigate","useNavigate","toHome","React","carousel","image","doctorImg","text","seePhoneGIF","labGIF","bedImg","errorAtt","localStorage","getItem","parseInt","lowError","setLowError","setOpen","dkiImg","dingkesImg","rsudOldImg","alignItems","type","fullWidth","buttonFoot"],"sourceRoot":""}