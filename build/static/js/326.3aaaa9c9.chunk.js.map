{"version":3,"file":"static/js/326.3aaaa9c9.chunk.js","mappings":"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","sources":["components/CustomInput/index.js","components/ModalNotification/index.js","components/ProfileBar/index.js","components/TopNav/Back/index.js","components/TopNav/WithBackground/index.js","components/TopNav/WithProfile/index.js","components/TopNav/index.js","pages/RegisterUserPage/index.js"],"sourcesContent":["import { TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PhoneNumberCustom = React.forwardRef(function PhoneNumberCustom(\r\n  props,\r\n  ref\r\n) {\r\n  const { onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={ref}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      format={\"####-####-####\"}\r\n      allowLeadingZeros\r\n      allowNegative={false}\r\n      decimalScale={0}\r\n      //   maxLength={13}\r\n      //   minLength={10}\r\n    />\r\n  );\r\n});\r\nconst PhoneNumberInput = (params) => {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const { classes, props } = params;\r\n\r\n  //   const helperText = (\r\n  //     <span className={classes.helperText}>{props.helperText}</span>\r\n  //   );\r\n  //   const errorText = (\r\n  //     <span className={classes.helperText}>{props.errorText}</span>\r\n  //   );\r\n  return (\r\n    <TextField\r\n      fullWidth={props.fullWidth}\r\n      label={props.label}\r\n      value={props.value}\r\n      onChange={props.onChange}\r\n      name={props.name}\r\n      id={props.id}\r\n      InputProps={{\r\n        inputComponent: PhoneNumberCustom,\r\n      }}\r\n      error={props.error}\r\n      helperText={props.helperText}\r\n      variant={props.variant || \"outlined\"}\r\n    />\r\n  );\r\n};\r\n\r\nconst NumberFormatMR = React.forwardRef(function NumberFormatCustom(\r\n  props,\r\n  ref\r\n) {\r\n  const { onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={ref}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.formattedValue,\r\n          },\r\n        });\r\n      }}\r\n      format={\"##-##-##\"}\r\n      allowLeadingZeros\r\n      allowNegative={false}\r\n      decimalScale={0}\r\n      //   maxLength={13}\r\n      //   minLength={10}\r\n    />\r\n  );\r\n});\r\nconst NoMrInput = (params) => {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const { classes, props } = params;\r\n\r\n  //   const helperText = (\r\n  //     <span className={classes.helperText}>{props.helperText}</span>\r\n  //   );\r\n  //   const errorText = (\r\n  //     <span className={classes.helperText}>{props.errorText}</span>\r\n  //   );\r\n  return (\r\n    <TextField\r\n      fullWidth={props.fullWidth}\r\n      size={props.size}\r\n      label={props.label}\r\n      value={props.value}\r\n      onChange={props.onChange}\r\n      name={props.name}\r\n      id={props.id}\r\n      InputProps={{\r\n        inputComponent: NumberFormatMR,\r\n      }}\r\n      error={props.error}\r\n      helperText={props.helperText}\r\n      variant={props.variant || \"outlined\"}\r\n    />\r\n  );\r\n};\r\nconst DefaultInput = (params) => {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const { classes, props } = params;\r\n  return (\r\n    <TextField\r\n      size={props.size}\r\n      fullWidth={props.fullWidth}\r\n      label={props.label}\r\n      value={props.value}\r\n      onChange={props.onChange}\r\n      name={props.name}\r\n      id={props.id}\r\n      error={props.error}\r\n      helperText={props.helperText}\r\n      variant={props.variant || \"outlined\"}\r\n    />\r\n  );\r\n};\r\nconst useStyles = makeStyles(() => ({}));\r\n\r\nconst CustomInput = (props) => {\r\n  let input = null;\r\n  const classes = useStyles();\r\n  switch (props.inputType) {\r\n    case \"phone-number\":\r\n      input = PhoneNumberInput({ props, classes });\r\n      break;\r\n    case \"no_mr\":\r\n      input = NoMrInput({ props, classes });\r\n      break;\r\n    default:\r\n      input = DefaultInput({ props, classes });\r\n      break;\r\n  }\r\n\r\n  return <> {input} </>;\r\n};\r\n\r\nCustomInput.propTypes = {\r\n  inputType: PropTypes.string.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n  name: PropTypes.any.isRequired,\r\n  id: PropTypes.any.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CustomInput;\r\n","import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Close from \"@mui/icons-material/Close\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nconst useStyles = makeStyles(() => ({\r\n  img: {\r\n    width: \"auto\",\r\n    height: \"150px\",\r\n    borderRadius: \"8px\",\r\n  },\r\n  container: {\r\n    padding: \"16px 0\",\r\n  },\r\n}));\r\nexport default function ModalNotification(props) {\r\n  const classes = useStyles();\r\n  //   const [open, setOpen] = React.useState(false);\r\n  const {\r\n    open,\r\n    title = \"title\",\r\n    subtitle = \"subtitle\",\r\n    abortText = \"Close\",\r\n    continueText = \"Submit\",\r\n    actAbort,\r\n    actContinue,\r\n    setOpen,\r\n    img,\r\n  } = props;\r\n  const handleClose = () => {\r\n    return setOpen(false);\r\n  };\r\n  const handleAbort = () => {\r\n    return actAbort ? actAbort() : handleClose();\r\n  };\r\n\r\n  const ModalButton = () => {\r\n    let html = \"\";\r\n    if (actContinue) {\r\n      html = (\r\n        <Grid item container xs={12} spacing={2}>\r\n          <Grid item xs={6}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={actAbort ? handleAbort : handleClose}\r\n            >\r\n              {abortText}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Button variant=\"contained\" onClick={() => actContinue()}>\r\n              {continueText}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    } else {\r\n      html = (\r\n        <Grid item container xs={12} spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={actAbort ? handleAbort : handleClose}\r\n            >\r\n              {abortText}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    }\r\n    return <>{html}</>;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <Container className={classes.container}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} container justifyContent={\"end\"}>\r\n              <IconButton onClick={handleClose}>\r\n                <Close />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={12} container justifyContent=\"center\">\r\n              {img && <img className={classes.img} src={img} alt=\"\" />}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Stack>\r\n                <Typography variant=\"subtitle2\" align=\"center\">\r\n                  {title}\r\n                </Typography>\r\n                <Typography variant=\"body1\" align=\"center\">\r\n                  {subtitle}\r\n                </Typography>\r\n              </Stack>\r\n            </Grid>\r\n            <ModalButton />\r\n          </Grid>\r\n        </Container>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport React from \"react\";\r\nimport doctorImg from \"../../assets/dokter.png\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/actions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    padding: \"3px\",\r\n    borderRadius: \"50% !important\",\r\n    cursor: \"pointer\",\r\n  },\r\n  img: {\r\n    width: \"40px\",\r\n    height: \"40px\",\r\n    borderRadius: \"50%\",\r\n    objectFit: \"contain\",\r\n  },\r\n}));\r\nconst ProfileBar = (props) => {\r\n  const { stateUser } = props;\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const handleProfile = () => {\r\n    stateUser ? navigate(\"/profile\") : navigate(\"/login\");\r\n  };\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <Grid item xs={12} container justifyContent=\"end\">\r\n          <Paper className={classes.root}>\r\n            <img\r\n              src={doctorImg}\r\n              alt=\"profile\"\r\n              className={classes.img}\r\n              onClick={handleProfile}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n    // <Paper className={classes.root}>\r\n    //   <Grid\r\n    //     container\r\n    //     spacing={2}\r\n    //     className={classes.root}\r\n    //     alignItems=\"center\"\r\n    //     justifyContent=\"space-around\"\r\n    //   >\r\n    //     <Grid item>\r\n    //       <img src={doctorImg} alt=\"profile\" className={classes.img} />\r\n    //     </Grid>\r\n    //     <Grid item>\r\n    //       <Typography variant=\"subtitle2\">\r\n    //         Hi, {stateUser ? stateUser.nama : \"Pengunjung\"}\r\n    //       </Typography>\r\n    //       {/* <Typography variant=\"subtitle2\">Login</Typography> */}\r\n    //     </Grid>\r\n    //     <Grid item>\r\n    //       {stateUser && (\r\n    //         <IconButton onClick={() => actLogout(null)}>\r\n    //           <Logout />\r\n    //         </IconButton>\r\n    //       )}\r\n    //       {!stateUser && (\r\n    //         <IconButton onClick={toLogin}>\r\n    //           <Login />\r\n    //         </IconButton>\r\n    //       )}\r\n    //     </Grid>\r\n    //   </Grid>\r\n    // </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stateUser: state.auth.user,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actLogout: (actions) => dispatch(logout(actions)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileBar);\r\n","import React from 'react'\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ChevronLeftOutlined from \"@mui/icons-material/ChevronLeftOutlined\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport {  NTRL_700, PRI_500 } from '../../../theme/colors';\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    // padding: \"32px 0\",\r\n    // bottom: 0,\r\n    // left: 0,\r\n    // right: 0,\r\n  },\r\n  iconButton: {\r\n    borderRadius: \"50%\",\r\n    border: \"2px solid !important\",\r\n    marginRight: \"8px !important\",\r\n  },\r\n  icon: {\r\n    color: PRI_500,\r\n  },\r\n  text: {\r\n    color: NTRL_700,\r\n  },\r\n}));\r\nconst Back = (props) => {\r\n    const classes = useStyles();\r\n    const {title = \"Undefined\", click = () => {}} = props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <IconButton className={classes.iconButton} onClick={click}>\r\n          <ChevronLeftOutlined className={classes.icon} />\r\n        </IconButton>\r\n        <Typography variant=\"subtitle2\" className={classes.text}>\r\n            {title}\r\n        </Typography>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Back\r\n","import React from \"react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ChevronLeftOutlined from \"@mui/icons-material/ChevronLeftOutlined\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport { NTRL_100, PRI_400, PRI_500 } from \"../../../theme/colors\";\r\nimport { Grid, Stack } from \"@mui/material\";\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: \"200px\",\r\n    backgroundColor: PRI_400,\r\n    // padding: \"32px 0\",\r\n    // bottom: 0,\r\n    // left: 0,\r\n    // right: 0,\r\n  },\r\n  container: {\r\n    padding: \"32px\"\r\n  },\r\n  iconButton: {\r\n    borderRadius: \"50%\",\r\n    border: \"2px solid !important\",\r\n    marginRight: \"8px !important\",\r\n  },\r\n  icon: {\r\n    color: PRI_500,\r\n  },\r\n  text: {\r\n    color: NTRL_100,\r\n  },\r\n}));\r\nconst Back = (props) => {\r\n  const classes = useStyles();\r\n  const { title = \"Undefined\", subtitle, click = () => {} } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={2} className={classes.container}>\r\n        <Grid item xs={12}>\r\n          <IconButton className={classes.iconButton} onClick={click}>\r\n            <ChevronLeftOutlined className={classes.icon} />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Stack spacing={1}>\r\n            <Typography variant=\"subtitle2\" className={classes.text}>\r\n              {title}\r\n            </Typography>\r\n            <Typography variant=\"body1\" className={classes.text}>\r\n              {subtitle}\r\n            </Typography>\r\n          </Stack>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Back;\r\n","import React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ChevronLeftOutlined from \"@mui/icons-material/ChevronLeftOutlined\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport { NTRL_700, PRI_500 } from \"../../../theme/colors\";\r\nimport ProfileBar from \"../../ProfileBar\";\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    // padding: \"32px 0\",\r\n    // bottom: 0,\r\n    // left: 0,\r\n    // right: 0,\r\n  },\r\n  iconButton: {\r\n    borderRadius: \"50%\",\r\n    border: \"2px solid !important\",\r\n    marginRight: \"8px !important\",\r\n  },\r\n  icon: {\r\n    color: PRI_500,\r\n  },\r\n  text: {\r\n    color: NTRL_700,\r\n  },\r\n}));\r\nconst WithProfile = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { title = \"Undefined\", click = () => {} } = props;\r\n  return (\r\n    <>\r\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n        <div className={classes.root}>\r\n          <IconButton className={classes.iconButton} onClick={click}>\r\n            <ChevronLeftOutlined className={classes.icon} />\r\n          </IconButton>\r\n          <Typography variant=\"subtitle2\" className={classes.text}>\r\n            {title}\r\n          </Typography>\r\n        </div>\r\n        <ProfileBar />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WithProfile;\r\n","import React from \"react\";\r\nimport Back from \"./Back\";\r\nimport WithBackground from \"./WithBackground\";\r\nimport WithProfile from \"./WithProfile\";\r\nconst TopNav = (props) => {\r\n  let html = \"\";\r\n  let { variant } = props;\r\n  switch (variant) {\r\n    case \"with-background\":\r\n      html = <WithBackground {...props} />;\r\n      break;\r\n    case \"with-profile\":\r\n      html = <WithProfile {...props} />;\r\n      break;\r\n    default:\r\n      html = <Back {...props} />;\r\n      break;\r\n  }\r\n  return <>{html}</>;\r\n};\r\n\r\nexport default TopNav;\r\n","import React from \"react\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CustomInput from \"../../components/CustomInput\";\r\nimport ModalNotification from \"../../components/ModalNotification\";\r\nimport TopNav from \"../../components/TopNav\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../redux/actions/auth\";\r\nimport failedImg from \"../../assets/hand_fail.png\";\r\nimport succImg from \"../../assets/hand_succ.png\";\r\nimport moment from \"moment\";\r\nimport { Typography } from \"@mui/material\";\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    paddingTop: \"16px\",\r\n  },\r\n}));\r\n\r\nconst RegisterUserPage = (props) => {\r\n  const { actRegister, stateBahasa, stateUser } = props;\r\n  const classes = useStyles();\r\n  const [dialogMr, setDialogMr] = React.useState(true);\r\n  const [openSucc, setOpenSucc] = React.useState(false);\r\n  const [openFail, setOpenFail] = React.useState({\r\n    open: false,\r\n    message: \"\",\r\n  });\r\n  const handleFail = (msg) => {\r\n    setOpenFail({\r\n      open: true,\r\n      message: msg,\r\n    });\r\n  };\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [rePassword, setRePassword] = React.useState(\"\");\r\n  const [tglLahir, setTglLahir] = React.useState(\"\");\r\n  const [noMr, setNoMr] = React.useState(\"\");\r\n\r\n  const changePwd = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const changeRePwd = (e) => {\r\n    setRePassword(e.target.value);\r\n  };\r\n  const navigate = useNavigate();\r\n\r\n  React.useEffect(() => {\r\n    if (stateUser) {\r\n      navigate(\"/home\", {\r\n        replace: true,\r\n      });\r\n    }\r\n  }, [stateUser, navigate]);\r\n\r\n  const handleRegister = () => {\r\n    return actRegister(\r\n      {\r\n        // no_mr: noMr,\r\n        password: password,\r\n        tgl_lahir: tglLahir,\r\n        no_mr: noMr ? noMr.replace(/-/g, \"\") : \"\",\r\n      },\r\n      {\r\n        success: () => setOpenSucc(true),\r\n        failed: (msg) => handleFail(msg),\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <ModalNotification\r\n        open={openSucc}\r\n        setOpen={() => navigate(\"/home\")}\r\n        title={\"Logged In\"}\r\n        subtitle={\"\"}\r\n        img={succImg}\r\n        actAbort={() => navigate(\"/home\")}\r\n      />\r\n      <ModalNotification\r\n        open={openFail.open}\r\n        setOpen={(open) => setOpenFail({ ...openFail, open: open })}\r\n        title={\"Failed\"}\r\n        subtitle={openFail.message}\r\n        img={failedImg}\r\n      />\r\n      <ModalNotification\r\n        open={dialogMr}\r\n        setOpen={setDialogMr}\r\n        title={\r\n          stateBahasa === \"indonesia\" ? \"Punya nomer MR?\" : \"Do you have MR?\"\r\n        }\r\n        subtitle={\r\n          stateBahasa === \"indonesia\"\r\n            ? \"Apakah anda memiliki nomer mr atau kartu pasien\"\r\n            : \"Do you have MR or patient's card\"\r\n        }\r\n        actAbort={() => navigate(\"/register\")}\r\n        abortText=\"No\"\r\n        continueText=\"Yes\"\r\n        actContinue={() => setDialogMr(false)}\r\n      />\r\n      <Container className={classes.root}>\r\n        <Stack spacing={2}>\r\n          <TopNav type=\"back\" title=\"Register\" click={() => navigate(-1)} />\r\n          <CustomInput\r\n            inputType=\"no_mr\"\r\n            value={noMr}\r\n            onChange={(e) => setNoMr(e.target.value)}\r\n            id=\"no_mr\"\r\n            name=\"no_mr\"\r\n            label=\"No MR\"\r\n          />\r\n          <TextField\r\n            id=\"tglLahir\"\r\n            name=\"tglLahir\"\r\n            label={stateBahasa === \"indonesia\" ? \"Tanggal Lahir\" : \"Birthdate\"}\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            inputProps={{\r\n              max: moment().format(\"YYYY-MM-DD\"),\r\n            }}\r\n            type={\"date\"}\r\n            value={tglLahir}\r\n            onChange={(e) => setTglLahir(e.target.value)}\r\n          />\r\n          <TextField\r\n            id=\"outlined-password-input\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onChange={changePwd}\r\n          />\r\n          <TextField\r\n            id=\"outlined-password-input\"\r\n            label=\"Re-Password\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={rePassword}\r\n            onChange={changeRePwd}\r\n          />\r\n          {password !== rePassword && (\r\n            <Typography variant=\"body2\" color=\"red\">\r\n              {stateBahasa === \"indonesia\"\r\n                ? \"password tidak sama\"\r\n                : \"password not match\"}\r\n            </Typography>\r\n          )}\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleRegister}\r\n            disabled={!password || password !== rePassword}\r\n            // onClick={() => navigate(\"/\")}\r\n          >\r\n            Register\r\n          </Button>\r\n          <Button variant=\"text\" onClick={() => navigate(\"/login\")}>\r\n            {stateBahasa === \"indonesia\"\r\n              ? \"Punya akun? Masuk\"\r\n              : \"Have account? Login\"}\r\n          </Button>\r\n          <Typography variant=\"body1\" align=\"center\">\r\n            Or\r\n          </Typography>\r\n          <Button variant=\"text\" onClick={() => navigate(\"/home\")}>\r\n            {stateBahasa === \"indonesia\"\r\n              ? \"Masuk sebagai tamu\"\r\n              : \"Sign-in as guest\"}\r\n          </Button>\r\n        </Stack>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stateBahasa: state.app.bahasa,\r\n    stateUser: state.auth.token,\r\n    // stateCompany: state.app.company,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actRegister: (body, action) => dispatch(registerUser(body, action)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterUserPage);\r\n"],"names":["PhoneNumberCustom","React","props","ref","onChange","other","getInputRef","onValueChange","values","target","name","value","format","allowLeadingZeros","allowNegative","decimalScale","NumberFormatMR","formattedValue","useStyles","makeStyles","CustomInput","input","classes","inputType","params","fullWidth","label","id","InputProps","inputComponent","error","helperText","variant","PhoneNumberInput","size","NoMrInput","DefaultInput","propTypes","PropTypes","img","width","height","borderRadius","container","padding","ModalNotification","open","title","subtitle","abortText","continueText","actAbort","actContinue","setOpen","handleClose","handleAbort","ModalButton","html","item","xs","spacing","onClick","onClose","className","justifyContent","src","alt","align","root","cursor","objectFit","connect","state","stateUser","auth","user","dispatch","actLogout","actions","logout","navigate","useNavigate","doctorImg","display","alignItems","iconButton","border","marginRight","icon","color","PRI_500","text","NTRL_700","click","IconButton","ChevronLeftOutlined","Typography","backgroundColor","PRI_400","NTRL_100","Grid","Stack","ProfileBar","WithBackground","paddingTop","stateBahasa","app","bahasa","token","actRegister","body","action","registerUser","dialogMr","setDialogMr","openSucc","setOpenSucc","message","openFail","setOpenFail","password","setPassword","rePassword","setRePassword","tglLahir","setTglLahir","noMr","setNoMr","replace","succImg","failedImg","type","e","required","InputLabelProps","shrink","inputProps","max","moment","autoComplete","tgl_lahir","no_mr","success","failed","msg","handleFail","disabled"],"sourceRoot":""}